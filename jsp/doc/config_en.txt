
       = JSP kernel target dependence department porting guide =

             (Last updated for Release 1.4.3: 22-Apr-2007)

------------------------------------------------------------------------ 
TOPPERS/JSP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Just Standard Profile Kernel

Copyright (C) 2000-2003 by Embedded and Real-Time Systems Laboratory
                             Toyohashi Univ. of Technology, JAPAN
Copyright (C) 2004-2005 by Embedded and Real-Time Systems Laboratory
             Graduate School of Information Science, Nagoya Univ., JAPAN

The above-mentioned copyright person, is it a condition of following (1)~(4),
Free Software Foundation , only when you meet the requirement described in 
Version 2 of GNU General Public License made public, This software(The one 
that this software was modified is contained. It is the same as follows. )
It is permitted use, to reproduce, to modify, and to distribute it again 
(Hereafter, it is called that it uses) free of charge.
 (1) The above-mentioned copyright display, this use condition, and the 
	 following no guarantee regulations must be included in the form of 
	 the state as it is when you use this software in the form of the 
	 source code in the source code. 
 (2) Publish the above-mentioned copyright display, this use condition, 
	 and the following no guarantee regulations in the document (user 
	 manual etc.) according to the re-distribution when you distribute 
	 this software again in the shape that can be used for other software 
	 developments like the library form etc.
 (3) Fill it with either of the following condition when distributing it 
	 again in the shape that cannot be used for other software developments 
	 as this software is built into the equipment. 
   (a) Publish the above-mentioned copyright display, this use condition, 
	   and the following no guarantee regulations in the document (user 
	   manual etc.) according to the re-distribution.
   (b) Report on the form of the re-distribution to the TOPPERS project 
	   separately by the providing method. 
 (4) Exempt the above-mentioned copyright person and the TOPPERS project 
	 from responsibility from immediately or any damage indirectly caused 
	 by using this software. 

This software is the one being offered by no guarantee. Neither the 
above-mentioned copyright person nor the TOPPERS project do any guarantee 
including the application possibility for this software. Moreover, it wants 
to cause by the use of this software immediately or indirectly or it doesn't 
assume the responsibility for the becoming it damage. 

 @(#) $Id: config.txt,v 1.40 2007/05/28 02:06:45 honda Exp $
------------------------------------------------------------------------


In this document, it explains the data type and the function, etc. 
that should be offered in the target dependence part of the JSP kernel. 

The target dependence part of the JSP kernel is separate to the 
processor dependence part, the system dependence part, and the 
development environment dependence part in consideration of recycling 
the dependence part. Roles of the processor dependence part and the 
system dependence part are not clear though it decides for the 
development environment dependence part. rough rolesYou may define 
many of following data types and functions in which dependence part. In 
an extreme case with the simulation environment etc. , it is possible 
not to use the system dependence part at all. 

The JSP kernel device driver etc. are mounted in the shape along the 
device driver design guideline examined in the tron society. The interim 
report of device driver design guideline WG can be downloaded from following URL.

        http://www.ertl.jp/ITRON/GUIDE/device-j.html


1. System construction environment

The standard of the JSP kernel is GNU development environment, and the 
configurator and the development support utility combine chiefly with GNU 
development environment and to operate, are mounted. Then, it explains 
around the case where GNU development environment is used in the following. 
There is a case where remodeling the development support utility cannot be 
needed when other development environments are used, and a part of utility 
be used.

(1) Decision of target abbreviation

The processor abbreviation and the system abbreviation are provided when a 
new target dependence part is made. Moreover, the development environment 
abbreviation is provided when the development environments other than GNU are 
used. The character used for these abbreviation is limited to alphabetic 
character, digit, and "_".

(2) Directory to put file of target dependence part

The directory to put the file of the target dependence part is made under 
config. The directory name is decided from the target abbreviation as follows. 
However, all alphabetic characters included in the directory name are assumed 
to be a small letter. That is, only English small letter, figure, and "_" can 
be used for the directory name.

The directory (processor dependence department directory) to put the file of 
the processor dependence part by using the processor abbreviation under config 
when GNU development environment is used is made and the directory (system 
dependence department directory) to put the file of the system dependence part 
by using the system abbreviation in addition under that is made. 

The processor dependence department directory is made by the name (for 
instance, "Sh3-hitachi") with which it is connected the processor 
abbreviation and the development environment to abbreviate the config 
under when the development environments other than GNU are used by "-". 
In addition, the system dependence department directory is made by 
using the system abbreviation under that. Only a file put on the 
directory for GNU development environment and a different file are put 
on these directories. Refer to the directory for GNU development 
environment when the file is not put. However, even if it is the same 
content, it is necessary to prepare it because the directory for GNU 
development environment is not referred for Makefile.config. 

(3) Setting of method of system construction

The Makefile.config file to set the method of system construction is 
prepared under the processor dependence department directory and the 
system dependence department directory respectively. As for these files, 
include is done from Makefile.

In the variable that should be defined with Makefile.config in the 
processor dependence part and the system dependence part, the one to 
set the command name of the development environment, the one to set the 
compilation option, and other one are. Here, it explains other 
variables and the definition methods.

(3-1) TEXT_START_ADDRESS        The first house number of text section
(3-2) DATA_START_ADDRESS        The first house number of data section

When the specification of the first house number of each section is 
necessary, the first house number is defined in these variables. 

(3-3) LDSCRIPT                  File name of linker script

When special Rincascript is used, the file name of linker script is defined 
in this variable. The file name is specified by the relative path from 
the config directory.

(4) Setting of command name of development environment

(4-1) TARGET            Target name

It defines it in the character string (The last "-" is unnecessary) 
given to the head of the command name of the compiler etc. by the 
target name specified when GNU development environment is done in 
configure. For instance, when TARGET is defined in m68k-unknown-elf, 
m68k-unknown-elf-gcc is used as a compiler. When this variable is not 
defined, mere gcc is used. When the development environments other than 
GNU are used, it is not necessary to define it. 

(4-2) CC                C compiler driver's name
(4-3) CXX               C++ compiler driver's name
(4-4) AS                Name of assembler
(4-5) LD                Name of linker
(4-6) AR                Name of archiver
(4-7) NM                Name of nm program
(4-8) RANLIB            Name of ranlib program
(4-9) OBJCOPY           Name of objcopy program
(4-10) OBJDUMP          Name of objdump program

When the development environments other than GNU are used, it defines 
it in the name of each command. When there is no corresponding command, 
and the command parameter are different, it is necessary to change the 
part where the command in Makefile is called. Because these are defined 
by using TARGET in GNU development environment, it is not necessary to 
define it. 

(5) Setting of compilation option

(5-1) CDEFS             Macro definition option(-D)
(5-2) INCLUDES          Specification of directory of include file option(-I)
(5-3) COPTS             Other options to compiler
(5-4) LDFLAGS           Option to linker
(5-5) LIBS              Option for library link specification

When the addition of dependence on the target, and a common compilation 
option to all source files is necessary, it defines it in the variable 
that each class of option showed up.

When these variables are defined with Makefile.config in the system 
dependence part, it does by using ":=" in the shape added to the 
definition till then. For instance, to add the option of "-Wall -g -O2 -
m68020-40" in the processor dependence part, the following descriptions 
are included in Makefile.config in the processor dependence part. 

    COPTS := $(COPTS) -Wall -g -O2 -m68020-40

On the other hand, to do to the change strongly, it will be similarly 
treated that it need not be such consideration because include is done 
by the beginning of Makefile as for Makefile.config in the system 
dependence part. 

It is necessary to include the following descriptions in Makefile.
config in the processor dependence part in case of almost. 

    When you use GNU development environment
        INCLUDES := -I$(SRCDIR)/config/$(CPU)

    When you use other development environments
        INCLUDES := -I$(SRCDIR)/config/$(CPU)-$(TOOL) -I$(SRCDIR)/config/$(CPU)

Moreover, it is necessary to include the following descriptions in 
Makefile.config in the system dependence part.

    When you use GNU development environment
        INCLUDES := $(INCLUDES) -I$(SRCDIR)/config/$(CPU)/$(SYS)

    When you use other development environments
        INCLUDES := $(INCLUDES) -I$(SRCDIR)/config/$(CPU)-$(TOOL)/$(SYS) \
                                -I$(SRCDIR)/config/$(CPU)/$(SYS)

Moreover, to CDEFS with either of Makefile.config when "_" will adhere 
to the head of the identification name at the C language level by you 
the identification name at the assembly language level
-DLABEL_ASM is added.

(5-6) STASK_DIR         Directory where source of system service is put
(5-7) STASK_ASMOBJS     Object of system service described by assembler
(5-8) STASK_COBJS       Object of system service described by C language
(5-9) STASK_CFLAGS      Compilation option to system service
(5-10) STASK_LIBS       Library link specification for system service

When library link specification necessary for the compilation option to 
apply when the list and those of the directory where the source of the 
system service (system log task and device driver, etc.) is put and the 
objectfile that composes it are compiled and the composition is done, 
it defines it in the variable shown up. 

When these variables are defined with Makefile.config in the system 
dependence part, it is necessary to treat similar to CDEFS etc.

(5-11) KERNEL_DIR       Directory where kernel source is put
(5-12) KERNEL_ASMOBJS   Kernel described by assembler object
(5-13) KERNEL_COBJS     Kernel described by C language object
(5-14) KERNEL_CFLAGS    Compilation option to kernel

When the compilation option to apply when the list and those of the 
directory where the kernel source is put and the object file that 
composes it are compiled is specified, it defines it in the variable 
shown up.

When these variables are defined with Makefile.config in the system 
dependence part, it is necessary to treat similar to CDEFS etc.

It is necessary to include the following descriptions in Makefile.
config in the processor dependence part in case of almost. 

    When you use GNU development environment
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)
        KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) cpu_support.o
        KERNEL_COBJS := $(KERNEL_COBJS) cpu_config.o

    When you use other development environments
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)-$(TOOL)
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)
        KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) cpu_support.o
        KERNEL_COBJS := $(KERNEL_COBJS) cpu_config.o

Moreover, it is necessary to include the following descriptions in 
Makefile.config of the system dependence department directory.

    When you use GNU development environment
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)/$(SYS)
        KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) sys_support.o
        KERNEL_COBJS := $(KERNEL_COBJS) sys_config.o

    When you use other development environments
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)-$(TOOL)/$(SYS)
        KERNEL_DIR := $(KERNEL_DIR):$(SRCDIR)/config/$(CPU)/$(SYS)
        KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) sys_support.o
        KERNEL_COBJS := $(KERNEL_COBJS) sys_config.o

(6) Generation of offset file

¥¢¥»¥ó¥Ö¥êžÀžì€Çµ­œÒ€µ€ì€ë¥×¥í¥°¥é¥à€«€é¡€CžÀžì€Î¹œÂ€ÂÎ€Ë¥¢¥¯¥»¥¹€¹€ë
Ÿì¹ç€Ë€Ï¡€¹œÂ€ÂÎ€Î³Æ¥Õ¥£¡Œ¥ë¥É€Î¥ª¥Õ¥»¥Ã¥È€ò»²ŸÈ€¹€ë€³€È€¬É¬Í×€Ç€¢€ë¡¥ 
JSP¥«¡Œ¥Í¥ë€Ç€Ï¡€É¬Í×€Ê¥ª¥Õ¥»¥Ã¥ÈÃÍ€ò¥Õ¥¡¥€¥ë¡ÊÉžœà€Ç€Ï offset.h¡Ë€ËœÐ
ÎÏ€¹€ë€¿€á€Î»ÅÁÈ€ß€È€·€Æ¡€makeoffset.c €È genoffset €òÍÑ°Õ€·€Æ€€€ë¡¥
makeoffset.c €Ï¡€€É€Î¥ª¥Õ¥»¥Ã¥ÈÃÍ€ò¥Õ¥¡¥€¥ë€ËœÐÎÏ€¹€ë€«€ò»ØÄê€¹€ë€â€Î
€Ç¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€¹€ëÉ¬Í×€¬€¢€ë¡¥genoffset €Ï¡€žœ»þÅÀ€Ç€ÏGNU
³«È¯ŽÄ¶­€Ë€Î€ßÂÐ±þ€·€Æ€€€ë¡¥

makeoffset.c €È genoffset €ò»È€Š€³€È€Ç¡€Îã€š€Ð¡€TCB Ãæ€Î texptn ¥Õ¥£¡Œ
¥ë¥É€Î¥ª¥Õ¥»¥Ã¥ÈÃÍ€ò TCB_texptn €Ë¥Þ¥¯¥íÄêµÁ€¹€ë€³€È€ä¡€TCB Ãæ€Î¥¿¥¹¥¯
¥³¥ó¥Æ¥­¥¹¥È¥Ö¥í¥Ã¥¯¡Êtskctxb¡Ë€ËŽÞ€Þ€ì€ë pc ¥Õ¥£¡Œ¥ë¥É€Î¥ª¥Õ¥»¥Ã¥ÈÃÍ
€ò TCB_pc €Ë¥Þ¥¯¥íÄêµÁ€¹€ë€³€È€¬€Ç€­€ë¡¥€Þ€¿¡€TCB Ãæ€Î enatex ¥Õ¥£¡Œ¥ë
¥É€Î¥ª¥Õ¥»¥Ã¥ÈÃÍ¡€¥Ó¥Ã¥È°ÌÃÖ¡€¥Ó¥Ã¥È¥Þ¥¹¥¯€ò¡€€œ€ì€Ÿ€ì TCB_enatex¡€
TCB_enatex_bit¡€TCB_enatex_mask €Ë¥Þ¥¯¥íÄêµÁ€¹€ë€³€È€¬€Ç€­€ë¡¥¥Þ¥¯¥íÄê
µÁ€¹€ë¥Ó¥Ã¥È°ÌÃÖ€ä¥Ó¥Ã¥È¥Þ¥¹¥¯€Ï¡€¥¢¥¯¥»¥¹€¹€ë¥µ¥€¥º€ä¥š¥ó¥Ç¥£¥¢¥ó€ò»Ø
Äê€¹€ë€³€È€¬€Ç€­€ë¡¥

GNU³«È¯ŽÄ¶­°Ê³°€òÍÑ€€€ëŸì¹ç€Ê€É¡€€³€Î»ÅÁÈ€ß€Ç¥ª¥Õ¥»¥Ã¥È¥Õ¥¡¥€¥ë€òÀžÀ®
€Ç€­€Ê€€»þ€Ë€Ï¡€offset.h €ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€·¡€Makefile.config 
€Ç OMIT_MAKEOFFSET €ò¥Ì¥ë¥¹¥È¥ê¥ó¥°°Ê³°€ËÄêµÁ€¹€ë¡¥

makeoffset.c €È genoffset €ËŽØ€¹€ë¥Þ¥Ë¥å¥¢¥ë€Ï¡€žœ»þÅÀ€Ç€ÏÍÑ°Õ€Ç€­€Æ€€
€Ê€€¡¥»È€€Êý€¬€ï€«€é€Ê€€Ÿì¹ç€ä¡€µ¡Çœ€¬Â­€ê€Ê€€Ÿì¹ç€Ë€Ï¡€ÁêÃÌ€µ€ì€¿€€¡¥

(7) ¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€Ê€É

¥¿¡Œ¥²¥Ã¥È€Ë€è€Ã€Æ€Ï¡€¥í¡Œ¥É¥â¥ž¥å¡Œ¥ë€ÎÀèÆ¬€ÈºÇžå€Ë¥ê¥ó¥¯€¹€Ù€­¥×¥í¥°
¥é¥à€ò¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€¹€ëÉ¬Í×€¬€¢€ë¡¥Â¿€¯€ÎŸì¹ç¡€¥¹¥¿¡Œ¥È¥¢¥Ã
¥×¥â¥ž¥å¡Œ¥ë€ò¥í¡Œ¥É¥â¥ž¥å¡Œ¥ë€ÎÀèÆ¬€Ë¥ê¥ó¥¯€¹€ëÉ¬Í×€¬€¢€ë¡¥

¥í¡Œ¥É¥â¥ž¥å¡Œ¥ë€ÎÀèÆ¬€Ë¥ê¥ó¥¯€¹€Ù€­¥×¥í¥°¥é¥à€¬€¢€ëŸì¹ç€Ë€Ï¡€
Makefile.config €Ë€ª€€€Æ¡€€œ€Î¥ª¥Ö¥ž¥§¥¯¥È¥Õ¥¡¥€¥ëÌŸ€ò START_OBJS €ËÄê
µÁ€·¡€€œ€ì€ËÂÐ€¹€ë¥³¥ó¥Ñ¥€¥ë¥ë¡Œ¥ë€È°ÍÂžŽØ·žºîÀ®¥ë¡Œ¥ë€òÄêµÁ€·€Ê€±€ì€Ð
€Ê€é€Ê€€¡¥¥í¡Œ¥É¥â¥ž¥å¡Œ¥ë€ÎºÇžå€Ë¥ê¥ó¥¯€¹€Ù€­¥×¥í¥°¥é¥à€¬€¢€ëŸì¹ç€Ë€Ï¡€
€œ€Î¥ª¥Ö¥ž¥§¥¯¥È¥Õ¥¡¥€¥ëÌŸ€ò END_OBJS €ËÄêµÁ€·¡€€œ€ì€ËÂÐ€¹€ë¥³¥ó¥Ñ¥€¥ë
¥ë¡Œ¥ë€È°ÍÂžŽØ·žºîÀ®¥ë¡Œ¥ë€òÄêµÁ€·€Ê€±€ì€Ð€Ê€é€Ê€€¡¥

Îã€š€Ð¡€¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€Î¥œ¡Œ¥¹¥Õ¥¡¥€¥ë€¬ start.S €ÎŸì¹ç€Ë€Ï¡€
Makefile.config €ËŒ¡€Î€è€Š€Êµ­œÒ€òÆþ€ì€ë€È€è€€¡¥

        # ¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€Î¥ª¥Ö¥ž¥§¥¯¥È¥Õ¥¡¥€¥ëÌŸ
        START_OBJS = start.o

        # ¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€Î¥³¥ó¥Ñ¥€¥ë¥ë¡Œ¥ë
        $(START_OBJS): %.o: %.S
                $(CC) -c $(CFLAGS) $(KERNEL_CFLAGS) $<

        # ¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€Î°ÍÂžŽØ·žºîÀ®¥ë¡Œ¥ë
        $(START_OBJS:.o=.d): %.d: %.S
                @$(PERL) $(SRCDIR)/utils/makedep -C $(CC) \
                        -O "$(CFLAGS) $(KERNEL_CFLAGS)" $< >> Makefile.depend

€Þ€¿¡€¥³¥ó¥Ñ¥€¥é€ËÉžœà€Î crtbegin.o €È crtend.o €òÍÑ€€€ëŸì¹ç€Ë€Ï¡€
Makefile.config €ËŒ¡€Î€è€Š€Êµ­œÒ€òÆþ€ì€ë€È€è€€¡¥

        # ¥ª¥Ö¥ž¥§¥¯¥È¥Õ¥¡¥€¥ëÌŸ
        START_OBJS = $(shell $(CC) -print-file-name=crtbegin.o)
        END_OBJS = $(shell $(CC) -print-file-name=crtend.o)

        # °ÍÂžŽØ·žºîÀ®¥ë¡Œ¥ë
        $(START_OBJS:.o=.d): %.d:
        $(END_OBJS:.o=.d): %.d:

€³€ÎŸì¹ç¡€€³€ì€é€Î¥Õ¥¡¥€¥ë€ò¥³¥ó¥Ñ¥€¥ë€¹€ë€³€È€Ï€Ê€€€¿€á¡€¥³¥ó¥Ñ¥€¥ë¥ë¡Œ
¥ë€ÏÉÔÍ×€Ç€¢€ë¡¥€Þ€¿¡€°ÍÂžŽØ·žºîÀ®¥ë¡Œ¥ë€Ï¥À¥ß¡Œ€Ç€è€€¡Ê°ÍÂžŽØ·žºîÀ®¥ë¡Œ
¥ë€¬€Ê€€€È¥š¥é¡Œ€Ë€Ê€ë¡Ë¡¥

€Ê€ª¡€¥«¡Œ¥Í¥ëÍÑ€Î¥¹¥¿¡Œ¥È¥¢¥Ã¥×¥â¥ž¥å¡Œ¥ë€«€é€Ï¡€main ŽØ¿ô€Ç€Ï€Ê€¯¡€
kernel_start ŽØ¿ô€òµ¯Æ°€¹€ëÉ¬Í×€¬€¢€ë¡¥

(8) ¥ê¥ó¥«¥¹¥¯¥ê¥×¥È

³«È¯ŽÄ¶­€ËÉžœà€Î¥ê¥ó¥«¥¹¥¯¥ê¥×¥È€¬»ÈÍÑ€Ç€­€Ê€€Ÿì¹ç€Ë€Ï¡€¥¿¡Œ¥²¥Ã¥È°ÍÂž
Éô€ÇÍÑ°Õ€¹€ë¡¥


£²¡¥¥¢¥×¥ê¥±¡Œ¥·¥ç¥óÍÑ€Î¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥¢¥×¥ê¥±¡Œ¥·¥ç¥óÍÑ€ÎÄêµÁ€ÏŒ¡€ÎÄÌ€ê€Ç€¢€ë¡¥
€³€ì€é€ÎÄêµÁ€ÎÃæ€Ç¡€(1) €ª€è€Ó (2) €Ï tool_defs.h €ËŽÞ€á€Ê€±€ì€Ð€Ê€é€Ê
€€¡¥€œ€ÎÂŸ€ÎÄêµÁ€Ï¡€cpu_defs.h €Þ€¿€Ï sys_defs.h¡Ê€Þ€¿€Ï€œ€ì€é€«€é¥€¥ó
¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á€ë¡¥

(1) ¥³¥ó¥Ñ¥€¥é°ÍÂž€Î¥Ç¡Œ¥¿·¿€ÎÄêµÁ

¥³¥ó¥Ñ¥€¥é°ÍÂž€Î¥Ç¡Œ¥¿·¿€ò°Ê²Œ€Î¥·¥ó¥Ü¥ë€ËÄêµÁ€¹€ë¡¥€³€ì€é€ÎÄêµÁ€Ï¡€
typedef €Ç€Ï€Ê€¯¡€#define €Ë€è€ê¥Þ¥¯¥íÄêµÁ€·€Ê€±€ì€Ð€Ê€é€Ê€€¡¥

(1-1) _int8_            8¥Ó¥Ã¥È€ÎÀ°¿ô·¿
(1-2) _int16_           16¥Ó¥Ã¥È€ÎÀ°¿ô·¿
(1-3) _int32_           32¥Ó¥Ã¥È€ÎÀ°¿ô·¿
(1-4) _int64_           64¥Ó¥Ã¥È€ÎÀ°¿ô·¿

³Æ¥µ¥€¥º€ÎÀ°¿ô·¿€ò¡€€³€ì€é€Î¥·¥ó¥Ü¥ë€Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥_int32_ °Ê³°€Ï¡€
¥³¥ó¥Ñ¥€¥é€¬¥µ¥Ý¡Œ¥È€·€Æ€€€Ê€€Ÿì¹ç€Ë€ÏÄêµÁ€¹€ëÉ¬Í×€¬€Ê€€¡¥_int32_ €ÎÄê
µÁ€ÏÉ¬¿Ü€Ç€¢€ë¡¥

(1-5) _bool_            BOOL€Î·¿

BOOL €Ï¡€Éžœà€Ç€Ï int €Ë·¿ÄêµÁ€µ€ì€ë€¬¡€€œ€ì€ÇÉÔÅÔ¹ç€ÊŸì¹ç€Ë€Ï¡€Å¬ÀÚ€Ê
·¿€ò _bool_ €Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥

(1-6) _vp_int_          VP_INT€Î·¿

VP_INT €Ï¡€Éžœà€Ç€Ï VP €Ë·¿ÄêµÁ€µ€ì€ë€¬¡€€œ€ì€ÇÉÔÅÔ¹ç€ÊŸì¹ç¡ÊÎã€š€Ð¡€
¥Ý¥€¥ó¥¿€¬16¥Ó¥Ã¥È€Ç¡€int €¬32¥Ó¥Ã¥È€ÎŸì¹ç¡Ë€Ë€Ï¡€Å¬ÀÚ€Ê·¿€ò _vp_int_ 
€Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥

(1-7) _intptr_          ¥Ý¥€¥ó¥¿€ò³ÊÇŒ€Ç€­€ëÀ°¿ô·¿

_intptr_ €Ï¡€¥Õ¥©¡Œ¥Þ¥Ã¥ÈœÐÎÏ€Ë€ª€€€Æ¡€int·¿€â¥Ý¥€¥ó¥¿·¿€â³ÊÇŒ€Ç€­€ëÀ°
¿ô·¿€È€·€Æ»ÈÍÑ€¹€ë¡¥€³€ì€òÄêµÁ€·€Ê€€Ÿì¹ç¡€long €¬»È€ï€ì€ë¡¥

(2) ¥³¥ó¥Ñ¥€¥é€Î³ÈÄ¥µ¡Çœ€Î€¿€á€Î¥Þ¥¯¥íÄêµÁ

(2-1) inline            ¥€¥ó¥é¥€¥ó»ØÄê
(2-2) Inline            ¥Õ¥¡¥€¥ëÆâ€Î€ß€ËÍ­žú€Ê¥€¥ó¥é¥€¥ó»ØÄê
(2-3) asm               ¥€¥ó¥é¥€¥ó¥¢¥»¥ó¥Ö¥é¡ÊºÇÅ¬²œ€òµö€¹¡Ë
(2-4) Asm               ¥€¥ó¥é¥€¥ó¥¢¥»¥ó¥Ö¥é¡ÊºÇÅ¬²œ€òÍÞ»ß¡Ë

€³€ì€é€ÎÃæ€Ç¡€asm €È Asm €Ï¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ€€€Æ€€€Ê€±€ì€ÐÄêµÁ€¹
€ëÉ¬Í×€¬€Ê€€¡¥

(3) ¥¿¥€¥à¥Æ¥£¥Ã¥¯€ÎÄêµÁ

(3-1) TIC_NUME          ¥¿¥€¥à¥Æ¥£¥Ã¥¯€ÎŒþŽü€ÎÊ¬»Ò¡ÊÃ±°Ì: 1¥ß¥êÉÃ¡Ë
(3-2) TIC_DENO          ¥¿¥€¥à¥Æ¥£¥Ã¥¯€ÎŒþŽü€ÎÊ¬Êì¡ÊÃ±°Ì: 1¥ß¥êÉÃ¡Ë

(4) ³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã³°¥Ï¥ó¥É¥éŽØÏ¢€ÎÄêµÁ

(4-1) INHNO             ³ä¹þ€ß¥Ï¥ó¥É¥éÈÖ¹æ€Î¥Ç¡Œ¥¿·¿
(4-2) EXCNO             CPUÎã³°¥Ï¥ó¥É¥éÈÖ¹æ€Î¥Ç¡Œ¥¿·¿

(5) ³ä¹þ€ß¥Þ¥¹¥¯€È³ä¹þ€ß¥Þ¥¹¥¯€ÎÊÑ¹¹¡¿»²ŸÈŽØÏ¢€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

chg_ixx¡€get_ixx €ò¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ë¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç€Ë€Ï¡€°Ê²Œ€ÎÄêµÁ€ª
€è€ÓÀëžÀ€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥xx¡€xxxx¡€XXXX €Ï¡€¥¿¡Œ¥²¥Ã¥ÈËè
€ËÅ¬ÀÚ€ÊÊž»úÎó€ËÄê€á€ë¡¥xxxx €ª€è€Ó XXXX €Ï¡€4Êž»ú€Ç€Ê€¯€Æ€â€è€€¡¥

(5-1) IXXXX                             ³ä¹þ€ß¥Þ¥¹¥¯€Î¥Ç¡Œ¥¿·¿
(5-2) ER chg_ixx(IXXXX ixxxx)           chg_ixx €Î¥×¥í¥È¥¿¥€¥×ÀëžÀ
(5-3) ER get_ixx(IXXXX *p_ixxxx)        get_ixx €Î¥×¥í¥È¥¿¥€¥×ÀëžÀ

(6) ³ä¹þ€ßÈÖ¹æ€È³ä¹þ€ß€Î¶Ø»ß¡¿µö²ÄŽØÏ¢€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

dis_int¡€ena_int €ò¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ë¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç€Ë€Ï¡€°Ê²Œ€ÎÄêµÁ€ª
€è€ÓÀëžÀ€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(6-1) INTNO                             ³ä¹þ€ßÈÖ¹æ€Î¥Ç¡Œ¥¿·¿
(6-2) ER dis_int(INTNO intno)           dis_int €Î¥×¥í¥È¥¿¥€¥×ÀëžÀ
(6-3) ER ena_int(INTNO intno)           ena_int €Î¥×¥í¥È¥¿¥€¥×ÀëžÀ

(7) À­ÇœÉŸ²ÁÍÑ¥·¥¹¥Æ¥à»þ¹ïŽØÏ¢€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

JSP¥«¡Œ¥Í¥ë€Ï¡€žŠµæ€Ø€ÎÍøÍÑ€òŒçÌÜÅª€Î°ì€Ä€È€·€Æ€€€ë€³€È€«€é¡€¥¿¡Œ¥²¥Ã
¥È°ÍÂž€Ë¡€À­ÇœÉŸ²ÁÍÑ€Î¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë vxget_tim €ò¥µ¥Ý¡Œ¥È²ÄÇœ€È€·€Æ€€
€ë¡¥vxget_tim €ò¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç€Ë€Ï¡€°Ê²Œ€ÎÄêµÁ€ª€è€ÓÀëžÀ€ò¥¿¡Œ¥²¥Ã¥È
°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(7-1) SYSUTIM                           À­ÇœÉŸ²ÁÍÑ¥·¥¹¥Æ¥à»þ¹ï€Î¥Ç¡Œ¥¿·¿
(7-2) ER vxget_tim(SYSUTIM *p_sysutim)  vxget_tim €Î¥×¥í¥È¥¿¥€¥×ÀëžÀ

(8) ¥¿¡Œ¥²¥Ã¥ÈŒ±ÊÌ¥Þ¥¯¥í€ÎÄêµÁ

cpu_defs.h €Ç€Ï¥×¥í¥»¥Ã¥µÎ¬ŸÎ¡Êcpu_defs.h €ÎÃÖ€«€ì€Æ€€€ë¥Ç¥£¥ì¥¯¥È¥êÌŸ
€òÂçÊž»ú€Ë€·€¿€â€Î¡Ë¡€sys_defs.h €Ç€Ï¥·¥¹¥Æ¥àÎ¬ŸÎ¡Êsys_defs.h €ÎÃÖ€«€ì
€Æ€€€ë¥Ç¥£¥ì¥¯¥È¥êÌŸ€òÂçÊž»ú€Ë€·€¿€â€Î¡Ë€ò¥Þ¥¯¥íÄêµÁ€¹€ë¡¥

(9) ¥×¥í¥»¥Ã¥µ€Î¥š¥ó¥Ç¥£¥¢¥ó€ÎÄêµÁ

(9-1) SIL_ENDIAN

¥×¥í¥»¥Ã¥µ€¬¥Ó¥Ã¥°¥š¥ó¥Ç¥£¥¢¥ó€ÎŸì¹ç€Ë€Ï SIL_ENDIAN_BIG¡Ê¡á1¡Ë¡€¥ê¥È¥ë
¥š¥ó¥Ç¥£¥¢¥ó€ÎŸì¹ç€Ë€Ï SIL_ENDIAN_LITTLE¡Ê¡á0¡Ë€Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥

(10) ¥·¥¹¥Æ¥à€ÎÄä»ßœèÍý€ÎÄêµÁ

(10-1) kernel_abort(void)

assert¥Þ¥¯¥í€Ë€ª€±€ë¥¢¥µ¡Œ¥·¥ç¥ó€ÎŒºÇÔ€ä¡€¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë€¬Ã×Ì¿Åª€Ê¥š¥é¡Œ
€òÊÖ€·€¿Ÿì¹ç€Ë¡€¥·¥¹¥Æ¥à€òÄä»ß€µ€»€ëŽØ¿ô€Þ€¿€Ï¥Þ¥¯¥í¡¥kernel_exit €òžÆ
€ÓœÐ€¹ÊýË¡€â¹Í€š€é€ì€ë€¬¡€¥Ç¥Ð¥Ã¥°€òÍÆ°×€Ë€¹€ë€¿€á€Ë€Ï¡€¥€¥ó¥é¥€¥óŽØ¿ô
€«¥Þ¥¯¥í€ÇÄêµÁ€·¡€€œ€ÎŸì€Ç¥·¥¹¥Æ¥à€òÄä»ß€µ€»€ëœèÍý€ËÄêµÁ€¹€ë€Î€¬ËŸ€Þ€·
€€¡Êkernel_exit €òžÆ€ÓœÐ€¹€È¡€¥š¥é¡Œ€¬È¯Àž€·€¿»þÅÀ€ÎŸõÂÖ€«€éÊÑ²œ€·€Æ€·
€Þ€Š¡Ë¡¥


£³¡¥¥«¡Œ¥Í¥ëÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥«¡Œ¥Í¥ëÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É€ÏŒ¡€ÎÄÌ€ê€Ç
€¢€ë¡¥€³€ì€é€Î¥Ç¡Œ¥¿·¿€ä¥Þ¥¯¥í€ÎÄêµÁ€ÈŽØ¿ô€Î¥×¥í¥È¥¿¥€¥×ÀëžÀ€Ï¡€ÊÌ€Ëµ­
œÒ€¬€Ê€€žÂ€ê¡€cpu_config.h €Þ€¿€Ï sys_config.h¡Ê€Þ€¿€Ï€œ€ì€é€«€é¥€¥ó¥¯
¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á€ë¡¥€Þ€¿¡€ŽØ¿ô€ÎŒÂÂÎ€Ï¡€CžÀžì€ÎŸì¹ç€Ï 
cpu_config.c €Þ€¿€Ï sys_config.c €Ë¡€¥¢¥»¥ó¥Ö¥êžÀžì€ÎŸì¹ç€Ï 
cpu_support.S €Þ€¿€Ï sys_support.S €Ëµ­œÒ€¹€ë¡¥

(0) ¥€¥ó¥¯¥ë¡Œ¥ÉÊýË¡€ËŽØ€¹€ë¥ë¡Œ¥ë

¥Ø¥Ã¥À¥Õ¥¡¥€¥ë€ò¥€¥ó¥¯¥ë¡Œ¥É€¹€ëµ­œÒ€Ï¡€°Ê²Œ€Î¥ë¡Œ¥ë€ËœŸ€Š€Î€òž¶Â§€È€¹
€ë¡¥

ANSI C€ÎÉžœà¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë€Ï¡€#include <¡Ä> €Ç¥€¥ó¥¯¥ë¡Œ¥É€¹€ë¡¥
€Þ€¿¡€Makefile €Þ€¿€Ï Makefile.config €Ç INCLUDES €Ë -I¥ª¥×¥·¥ç¥ó€Ç»Ø
Äê€·€¿¥Ç¥£¥ì¥¯¥È¥ê€Ë€¢€ë¥Õ¥¡¥€¥ë€Ï¡€#include <¡Ä> €Ç¥€¥ó¥¯¥ë¡Œ¥É€¹€ë¡¥
¥«¡Œ¥Í¥ë€ò¹œÀ®€¹€ë¥Õ¥¡¥€¥ë€«€é€Î¥€¥ó¥¯¥ë¡Œ¥É€ËÂÐ€·€Æ€Ï¡€°Ê²Œ€Î¥Ç¥£¥ì¥¯
¥È¥ê€Ë€¢€ë¥Õ¥¡¥€¥ë€¬€³€ì€Ë³ºÅö€¹€ë¡Ê¥¿¡Œ¥²¥Ã¥È€Ë€â°ÍÂž¡Ë¡¥
        jsp/include/
        jsp/config/$(CPU)
        jsp/config/$(CPU)/$(SYS)
        jsp/config/$(CPU)-$(TOOL)
        jsp/config/$(CPU)-$(TOOL)/$(SYS)
        pdic/simple_sio

€œ€ÎÂŸ€Î¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë€Ï #include "¡Ä" €Ç¥€¥ó¥¯¥ë¡Œ¥É€¹€ë¡¥¥«¡Œ
¥Í¥ë€ò¹œÀ®€¹€ë¥Õ¥¡¥€¥ë€«€é€Î¥€¥ó¥¯¥ë¡Œ¥É€ËÂÐ€·€Æ€Ï¡€°Ê²Œ€Î¥Ç¥£¥ì¥¯¥È¥ê
€Ë€¢€ë¥Õ¥¡¥€¥ë€¬€³€ì€Ë³ºÅö€¹€ë¡Ê¥¿¡Œ¥²¥Ã¥È€Ë€â°ÍÂž¡Ë¡¥
        jsp/kernel
        jsp/systask

(1) ¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È¥Ö¥í¥Ã¥¯€Î¥Ç¡Œ¥¿·¿

(1-1) CTXB

¥¿¡Œ¥²¥Ã¥È°ÍÂž€Î¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€òÊÝÂž€¹€ë€¿€á€Ë¡€TCB Ãæ€Ë»ý€Ä€³€È€¬
É¬Í×€Ê¥Ç¡Œ¥¿¹œÂ€€Î·¿¡¥

(2) ¥·¥¹¥Æ¥àŸõÂÖ»²ŸÈ

(2-1) BOOL sense_context(void)

žœºß€ÎŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€¬¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ÎŸì¹ç€Ï FALSE¡€Èó¥¿¥¹¥¯¥³
¥ó¥Æ¥­¥¹¥È€ÎŸì¹ç€Ï TRUE €òÊÖ€¹ŽØ¿ô¡¥

(2-2) BOOL sense_lock(void)

žœºß€Î¥·¥¹¥Æ¥àŸõÂÖ€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÎŸì¹ç€Ï TRUE¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€Î
»þ€Ï FALSE €òÊÖ€¹ŽØ¿ô¡¥

(2-3) BOOL t_sense_lock(void)

¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€žœºß€Î¥·¥¹¥Æ¥àŸõÂÖ€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÎŸì¹ç
€Ï TRUE¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€Î»þ€Ï FALSE €òÊÖ€¹ŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€Èó¥¿¥¹
¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥

(2-4) BOOL i_sense_lock(void)

Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€žœºß€Î¥·¥¹¥Æ¥àŸõÂÖ€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÎŸì
¹ç€Ï TRUE¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€Î»þ€Ï FALSE €òÊÖ€¹ŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€¥¿¥¹
¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥

¢š ž¶ÍýÅª€Ë€Ï¡€sense_lock €¬Äó¶¡€µ€ì€Æ€€€ì€Ð t_sense_lock €È 
i_sense_lock €ÏÉ¬Í×€Ê€¯¡€µÕ€Ë t_sense_lock €È i_sense_lock €¬Äó¶¡€µ€ì
€Æ€€€ì€Ð sense_lock €òŒÂžœ€¹€ë€³€È€Ï€Ç€­€ë€¬¡€¥¿¡Œ¥²¥Ã¥È€Ë°ÍÂž€»€º€Ë¹â
€€ŒÂ¹ÔžúÎš€òŒÂžœ€¹€ë€¿€á€Ë¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€¬3€Ä€ÎŽØ¿ô€òÄó¶¡€¹€ë€³€È
€È€·€Æ€€€ë¡¥

(3) CPU¥í¥Ã¥¯€È€œ€Î²òœü

(3-1) void t_lock_cpu(void)

¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€«€é¡€CPU¥í¥Ã¥¯ŸõÂÖ€ËÁ«°Ü
€µ€»€ëŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÇžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥€Þ€¿¡€Èó¥¿
¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€â€Ê€€¡¥

(3-2) void t_unlock_cpu(void)

¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€CPU¥í¥Ã¥¯ŸõÂÖ€«€é¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€ËÁ«°Ü
€µ€»€ëŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€ÇžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥€Þ€¿¡€
Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€â€Ê€€¡¥

(3-3) void i_lock_cpu(void)

Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€«€é¡€CPU¥í¥Ã¥¯ŸõÂÖ€ËÁ«
°Ü€µ€»€ëŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÇžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥€Þ€¿¡€¥¿
¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€â€Ê€€¡¥

(3-4) void i_unlock_cpu(void)

Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€€€Æ¡€CPU¥í¥Ã¥¯ŸõÂÖ€«€é¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€ËÁ«
°Ü€µ€»€ëŽØ¿ô¡¥€³€ÎŽØ¿ô€¬¡€CPU¥í¥Ã¥¯²òœüŸõÂÖ€ÇžÆ€Ð€ì€ë€³€È€Ï€Ê€€¡¥€Þ€¿¡€
¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€ë€³€È€â€Ê€€¡¥

(4) ¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã

(4-1) void dispatch(void)

¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã¡Ê°Ê²Œ¡€Ã±€Ë¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€ÈžÀ€Š¡Ë€òÌÀŒšÅª€ËžÆ€Ö€¿
€á€ÎŽØ¿ô¡¥¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€¿¥µ¡Œ¥Ó¥¹¥³¡Œ¥ëœèÍý€«€é¡€CPU¥í¥Ã
¥¯ŸõÂÖ€ÇžÆ€Ð€ì€ë¡¥

€³€ÎŽØ¿ô€¬žÆ€Ð€ì€ë€È¡€ŽØ¿ô€òžÆ€ó€À¥¿¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È€òÊÝÂž€·¡€ ŒÂ¹Ô
€Ç€­€ë¥¿¥¹¥¯€ÎÃæ€ÇºÇ¹âÍ¥Àèœç°Ì€Î¥¿¥¹¥¯¡Êschedtsk¡Ë€Î¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢
€·€ÆŒÂ¹ÔŸõÂÖ€È€¹€ë¡¥ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç¡Êschedtsk €¬ NULL €ÎŸì
¹ç¡Ë€Ë€Ï¡€³ä¹þ€ß€òµö²Ä€·€Æ¡€ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ç€­€ë€Þ€ÇÂÔ€Ä¡¥€³€³€Ç¡€
ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ç€­€ë€Î€òÂÔ€ÄŽÖ€Ëµ¯Æ°€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐžý€Ç¡€
¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€¬žÆ€Ð€ì€Ê€€€è€Š€ËÂÐºö€¹€ë€³€È€¬É¬Í×€Ç€¢€ë¡¥¶ñÂÎÅª€Ë€Ï¡€
ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ç€­€ë€Î€òÂÔ€ÄŽÖ¡€°ì»þÅª€ËÈó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ËÀÚ€ê
Ž¹€š€ë€«¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á€òÊÝÎ±€¹€ë€è€Š€Ë€¹€ë¡¥

¿·€¿€ËŒÂ¹ÔŸõÂÖ€Ë€Ê€Ã€¿¥¿¥¹¥¯€¬¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ€¿
€·€Æ€€€ì€Ð¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€òµ¯Æ°€¹€ë¡¥€Þ€¿¡€€³€ÎŽØ¿ô€òžÆ€ÓœÐ€·
€¿¥¿¥¹¥¯€¬Œ¡€ËŒÂ¹ÔŸõÂÖ€Ë€Ê€Ã€¿»þ¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ
€¿€·€Æ€€€ì€Ð¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò¹Ô€Š¡¥¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á
¥ó€Îµ¯Æ°€Ë€Ï¡€¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€¬Äó¶¡€¹€ë calltex €Þ€¿€Ï call_texrtn 
€òÍÑ€€€ë€³€È€¬€Ç€­€ë¡¥

(4-2) void exit_and_dispatch(void)

žœºßŒÂ¹ÔÃæ€Î¥³¥ó¥Æ¥­¥¹¥È€òŒÎ€Æ¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€òžÆ€ÓœÐ€¹€¿€á€ÎŽØ¿ô¡¥¥¿
¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€«€éžÆ€Ð€ì€¿¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë¡Ê¶ñÂÎÅª€Ë€Ï¡€ext_tsk¡ËœèÍý
€Þ€¿€Ï¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý€«€é¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÇžÆ€Ð€ì€ë¡¥

€³€ÎŽØ¿ô€¬žÆ€Ð€ì€ë€È¡€ŽØ¿ô€òžÆ€ó€À¥¿¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È€òÊÝÂž€»€º¡€ŒÂ¹Ô
€Ç€­€ë¥¿¥¹¥¯€ÎÃæ€ÇºÇ¹âÍ¥Àèœç°Ì€Î¥¿¥¹¥¯¡Êschedtsk¡Ë€Î¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢
€·€ÆŒÂ¹ÔŸõÂÖ€È€¹€ë¡¥ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç¡Êschedtsk €¬ NULL €ÎŸì
¹ç¡Ë€ÎœèÍý€Ï¡€dispatch €ÈÆ±ÍÍ€Ç€¢€ë¡¥

¿·€¿€ËŒÂ¹ÔŸõÂÖ€Ë€Ê€Ã€¿¥¿¥¹¥¯€¬¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ€¿
€·€Æ€€€ì€Ð¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€òµ¯Æ°€¹€ë¡¥

€³€ÎŽØ¿ô€Ï¡€¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý€«€é€âžÆ€Ð€ì€ë€¿€á€Ë¡€Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­
¥¹¥È€«€é€âžÆ€Ð€ì€Æ€âÀµ€·€¯œèÍý€Ç€­€ë€³€È€¬É¬Í×€Ç€¢€ë¡¥€Ê€ª¡€€³€ÎŽØ¿ô€«
€é€Ï¥ê¥¿¡Œ¥ó€·€Ê€€¡¥

(5) ³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã³°¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý

(5-1) INTHDR_ENTRY(inthdr)
(5-2) INT_ENTRY(inthdr)

INTHDR_ENTRY(inthdr) €Ïµ¯Æ°ÈÖÃÏ€¬ inthdr €Î³ä¹þ€ß¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹œÐ
ÆþžýœèÍý¥ë¡Œ¥Á¥ó€òÀžÀ®€¹€ë¥Þ¥¯¥í¡€INT_ENTRY(inthdr) €ÏÀžÀ®€¹€ëœÐÆþžýœè
Íý¥ë¡Œ¥Á¥ó€ÎÀèÆ¬€Î¥é¥Ù¥ë€òÆÀ€ë€¿€á€Î¥Þ¥¯¥í€Ç€¢€ë¡¥INT_ENTRY(inthdr) €Ç
ÆÀ€é€ì€ë¥é¥Ù¥ë€Ï¡€³ä¹þ€ß¥Ï¥ó¥É¥éœéŽü²œ¥Ö¥í¥Ã¥¯€ËœÐÆþžýœèÍý¥ë¡Œ¥Á¥ó€ÎÀè
Æ¬ÈÖÃÏ€òÅÐÏ¿€¹€ë€¿€á€Ë»È€ï€ì€ë¡¥œÐÆþžýœèÍý¥ë¡Œ¥Á¥ó€òÀžÀ®€¹€ëÉ¬Í×€¬€Ê€€
Ÿì¹ç€Ë€Ï¡€INTHDR_ENTRY(inthdr) €òÃ±€Ë extern ÀëžÀ€ËÅž³«€¹€ì€Ð€è€€¡¥

³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý€Ï¡€ŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€òÈó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë
ÀÚ€êŽ¹€š¡€¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÊÝÂž€·€Æ¡€³ä¹þ€ß¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹¡¥³ä¹þ
€ß¥Ï¥ó¥É¥é€«€éÌá€ë€È¡€žµ€ÎŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€ËÌá€¹€È€È€â€Ë¡€É¬Í×€Ë±þ€ž€Æ
¥Ç¥£¥¹¥Ñ¥Ã¥Á€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€ò¹Ô€Š¡¥¥Ç¥£¥¹¥Ñ¥Ã¥Á€È¥¿
¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€Ï¡€¶ñÂÎÅª€Ë€ÏŒ¡€Î€è€Š€Ë¹Ô€Š¡¥

(a) °Ê²Œ€ÎœèÍý€Ï¡€³ä¹þ€ß¥Ï¥ó¥É¥é€¬¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥ÈŒÂ¹ÔÃæ€Ëµ¯Æ°€µ€ì€¿
Ÿì¹ç€Ç¡€reqflg €¬ TRUE €Î»þ€Î€ß¹Ô€Š¡¥

(b) enadsp €¬ TRUE €Ç¡€ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯¡Êruntsk¡Ë€ÈŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€Î
Ãæ€ÇºÇ¹âÍ¥Àèœç°Ì€Î¥¿¥¹¥¯¡Êschedtsk¡Ë€¬°ìÃ×€·€Æ€€€Ê€€Ÿì¹ç€Ë€Ï¡€Á°ŒÔ€Î¥¿
¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È€òÊÝÂž€·¡€žåŒÔ€Î¥¿¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢€·€ÆŒÂ¹ÔŸõ
ÂÖ€È€¹€ë¡¥ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç¡Êschedtsk €¬ NULL €ÎŸì¹ç¡Ë€Ë€Ï¡€
³ä¹þ€ß€òµö²Ä€·€Æ¡€ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€¬€Ç€­€ë€Þ€ÇÂÔ€Ä¡¥€³€³€Ç€â¡€ŒÂ¹Ô€Ç€­
€ë¥¿¥¹¥¯€¬€Ç€­€ë€Î€òÂÔ€ÄŽÖ€Ëµ¯Æ°€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐžý€Ç¡€¥¿¥¹¥¯¥Ç¥£
¥¹¥Ñ¥Ã¥Á¥ã€¬žÆ€Ð€ì€Ê€€€è€Š€Ë€¹€ë€³€È€¬É¬Í×€Ç€¢€ë€¬¡€œÐÆþžýœèÍý€òÈó¥¿¥¹
¥¯¥³¥ó¥Æ¥­¥¹¥È€ÇŒÂ¹Ô€·€Æ€€€ì€Ð¡€ÆÃ€ËÂÐºö€¹€ëÉ¬Í×€Ï€Ê€€¡¥

(c) ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯¡Ê(b) €Ç¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€ò¹Ô€Ã€¿Ÿì¹ç€Ï¡€¿·€¿€ËŒÂ
¹ÔŸõÂÖ€È€Ê€Ã€¿¥¿¥¹¥¯¡Ë€¬¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ€¿€·€Æ€€€ì
€Ð¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€òµ¯Æ°€¹€ë¡¥€Þ€¿¡€(b) €Ç¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€ò
¹Ô€Ã€¿Ÿì¹ç€Ï¡€€œ€ì€Þ€ÇŒÂ¹ÔŸõÂÖ€Ç€¢€Ã€¿¥¿¥¹¥¯€¬Œ¡€ËŒÂ¹ÔŸõÂÖ€Ë€Ê€Ã€¿»þ¡€
¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ€¿€·€Æ€€€ì€Ð¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á
¥ó€Îµ¯Æ°€ò¹Ô€Š¡¥¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€Ë€Ï¡€¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€¬
Äó¶¡€¹€ë calltex €Þ€¿€Ï call_texrtn €òÍÑ€€€ë€³€È€¬€Ç€­€ë¡¥

€³€Î¥Þ¥¯¥í€ÇÀžÀ®€¹€ë¥ë¡Œ¥Á¥ó€Ç€Ï¡€Ÿåµ­€ÎœèÍý€Î°ìÉô€Î€ß€ò¹Ô€€¡€»Ä€ê€Îœè
Íý€ÏÊÌ€ËÍÑ°Õ€·€¿¥ë¡Œ¥Á¥ó€ËÇ€€»€Æ€â€è€€¡¥¶ñÂÎÅª€Ë€Ï¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á
€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€Ï¡€ÊÌ€Ë¥ë¡Œ¥Á¥ó€È€·€ÆÍÑ°Õ€¹€ë€Î€¬Å¬
Åö€Ç€¢€í€Š¡¥

(5-3) EXCHDR_ENTRY(exchdr)
(5-4) EXC_ENTRY(exchdr)

EXCHDR_ENTRY(exchdr) €Ïµ¯Æ°ÈÖÃÏ€¬ exchdr €ÎCPUÎã³°¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹œÐ
ÆþžýœèÍý¥ë¡Œ¥Á¥ó€òÀžÀ®€¹€ë¥Þ¥¯¥í¡€EXC_ENTRY(exchdr) €ÏÀžÀ®€¹€ëœÐÆþžýœè
Íý¥ë¡Œ¥Á¥ó€ÎÀèÆ¬€Î¥é¥Ù¥ë€òÆÀ€ë€¿€á€Î¥Þ¥¯¥í€Ç€¢€ë¡¥EXC_ENTRY(exchdr) €Ç
ÆÀ€é€ì€ë¥é¥Ù¥ë€Ï¡€CPUÎã³°¥Ï¥ó¥É¥éœéŽü²œ¥Ö¥í¥Ã¥¯€ËœÐÆþžýœèÍý¥ë¡Œ¥Á¥ó€Î
ÀèÆ¬ÈÖÃÏ€òÅÐÏ¿€¹€ë€¿€á€Ë»È€ï€ì€ë¡¥œÐÆþžýœèÍý¥ë¡Œ¥Á¥ó€òÀžÀ®€¹€ëÉ¬Í×€¬€Ê
€€Ÿì¹ç€Ë€Ï¡€EXCHDR_ENTRY(exchdr) €òÃ±€Ë extern ÀëžÀ€ËÅž³«€¹€ì€Ð€è€€¡¥

CPUÎã³°¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý€Ï¡€ŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€òÈó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È
€ËÀÚ€êŽ¹€š¡€¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÊÝÂž€·€Æ¡€CPUÎã³°¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹¡¥
CPUÎã³°¥Ï¥ó¥É¥é€Ë€Ï¡€VP·¿€Î¥Ñ¥é¥á¡Œ¥¿ p_excinf €òÅÏ€¹¡¥€³€Î¥Ñ¥é¥á¡Œ¥¿
€Ï¡€CPUÎã³°€ËŽØ€¹€ëŸðÊó€òÊÝÂž€·€¿¥¹¥¿¥Ã¥¯ÎÎ°è€Ø€Î¥Ý¥€¥ó¥¿€Ç€¢€ë€³€È€ò
ÁÛÄê€·€Æ€€€ë€¬¡€¶ñÂÎÅª€Ë€Ï¥¿¡Œ¥²¥Ã¥ÈËè€ËÄê€á€ë¡¥

CPUÎã³°¥Ï¥ó¥É¥é€«€éÌá€ë€È¡€žµ€ÎŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€ËÌá€¹€È€È€â€Ë¡€É¬Í×€Ë
±þ€ž€Æ¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€ò¹Ô€Š¡¥¥¿¥¹
¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€Ï¡€³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐ
ÆþžýœèÍý€ÎŸì¹ç€ÈÆ±ÍÍ€Ç€¢€ë¡ÊŸåµ­€Î (a)¡Á(c)¡Ë¡¥

(6) ¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥ÈÀßÄêœèÍý¡Êcpu_context.h¡Ë

¥¿¡Œ¥²¥Ã¥È°ÍÂž€Î¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€òÀßÄê€¹€ë€¿€á€Ë create_context €È 
activate_context €Î2€Ä€ÎŽØ¿ô€òÍÑ°Õ€¹€ë¡¥2€Ä€ÎŽØ¿ô€òžÆ€ÓœÐ€¹€³€È€Ç¡€¥¿
¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È¡Ê¶ñÂÎÅª€Ë€Ï¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È¥Ö¥í¥Ã¥¯€ÎÆâÍÆ€È¥¿¥¹
¥¯€Î¥¹¥¿¥Ã¥¯ÎÎ°è¡Ë€ò¥¿¥¹¥¯€¬µ¯Æ°€Ç€­€ëŸõÂÖ€ËÀßÄê€¹€ë¡¥2€Ä€ÎŽØ¿ô€ÏžÆ€Ð
€ì€ë¥¿¥€¥ß¥ó¥°€¬°Û€Ê€ë€À€±€ÇÌÀ³Î€ÊÌò³äÊ¬ÃŽ€Ï€Ê€¯¡€€É€Î€è€Š€ÊœèÍý€Ï€É€Á
€é€ÎŽØ¿ô€Ç¹Ô€ï€Ê€±€ì€Ð€Ê€é€Ê€€€È€€€ŠÀ©Ìó€Ï€Ê€€¡¥

€³€ì€é€ÎŽØ¿ô€ÎÀëžÀ€ª€è€Ó¥Þ¥¯¥í€ÎÄêµÁ€Ï¡€cpu_context.h €ËŽÞ€á€ë¡¥€³€ì€Ï¡€
cpu_config.h €òœèÍý€¹€ë»þÅÀ€Ç€Ï TCB €¬ÄêµÁ€µ€ì€Æ€€€Ê€€€¿€á€Ç€¢€ë¡¥

(6-1) void create_context(TCB *tcb)

¥¿¥¹¥¯€¬µÙ»ßŸõÂÖ€Ë°Ü¹Ô€¹€ë»þ€ËžÆ€Ð€ì€ë¡¥¶ñÂÎÅª€Ë€Ï¡€¥¿¥¹¥¯€ÎÀžÀ®»þ
¡ÊJSP¥«¡Œ¥Í¥ë€Ç€Ï¡€CRE_TSK €Ç¥¿¥¹¥¯€òÀžÀ®€¹€ë€¿€á¡€¥¿¥¹¥¯ŽÉÍý¥â¥ž¥å¡Œ
¥ë€ÎœéŽü²œ¡Ë€È¥¿¥¹¥¯€ÎœªÎ»»þ¡Êext_tsk¡€ter_tsk¡Ë€ËžÆ€Ð€ì€ë¡¥

(6-2) void activate_context(TCB *tcb)

¥¿¥¹¥¯€¬ŒÂ¹Ô€Ç€­€ëŸõÂÖ€Ë°Ü¹Ô€¹€ë»þ€ËžÆ€Ð€ì€ë¡¥¶ñÂÎÅª€Ë€Ï¡€act_tsk €Ç¥¿
¥¹¥¯€òµ¯Æ°€¹€ë»þ¡€¥¿¥¹¥¯€ÎœªÎ»»þ¡Êext_tsk¡€ter_tsk¡Ë€Ëµ¯Æ°Í×µá€Î¥­¥å¡Œ
¥€¥ó¥°€Ë€è€êºÆµ¯Æ°€¹€ë»þ¡€TA_ACT Â°À­€ò»ØÄê€·€Æ¥¿¥¹¥¯€òÀžÀ®€·€¿»þ¡Ê¥¿
¥¹¥¯ŽÉÍý¥â¥ž¥å¡Œ¥ë€ÎœéŽü²œ¡Ë€ËžÆ€Ð€ì€ë¡¥

(6-3) ACTIVATED_STACK_SIZE¡Ê¥ª¥×¥·¥ç¥ó¡Ë

ext_tsk €¬¥¹¥¿¥Ã¥¯Ÿå€Ë³ÎÊÝ€¹€ë¥À¥ß¡ŒÎÎ°è€Î¥µ¥€¥º€òÄêµÁ€¹€ë€¿€á€Î¥Þ¥¯¥í¡¥
¥À¥ß¡ŒÎÎ°è€¬É¬Í×€Ê€€Ÿì¹ç€Ï¡€€³€Î¥Þ¥¯¥í€òÄêµÁ€¹€ëÉ¬Í×€Ï€Ê€€¡¥

ext_tsk €Ï¡€Œ«¥¿¥¹¥¯€òœªÎ»€µ€»€¿žå¡€Œ«¥¿¥¹¥¯€ËÂÐ€·€Æ create_context €ò
žÆ€Ö¡¥€Þ€¿¡€¥¿¥¹¥¯€Îµ¯Æ°Í×µá€¬¥­¥å¡Œ¥€¥ó¥°€µ€ì€Æ€€€¿Ÿì¹ç€Ë€Ï¡€Œ«¥¿¥¹¥¯
€ËÂÐ€·€Æ activate_context €âžÆ€Ö¡¥create_context €È activate_context 
€Ï¡€ÂÐŸÝ¥¿¥¹¥¯€Î¥¹¥¿¥Ã¥¯ÎÎ°è€òœñ€­Ž¹€š€ëŸì¹ç€¬€¢€ë€¬¡€€³€ì€¬ ext_tsk
¡Ê€ª€è€Ó€œ€³€«€éžÆ€Ð€ì€ëŽØ¿ô¡Ë€¬»ÈÍÑ€·€Æ€€€ë¥¹¥¿¥Ã¥¯ÎÎ°è€ÈœÅ€Ê€Ã€¿Ÿì¹ç¡€
Œ«Ê¬€Î»ÈÍÑ€·€Æ€€€ë¥¹¥¿¥Ã¥¯ÎÎ°è€òŒ«Ê¬€ÇÇË²õ€¹€ë·ë²Ì€Ë€Ê€ë¡¥

ACTIVATE_STACK_SIZE €ò¡€create_context €È activate_context €¬œñ€­Ž¹€š
€ë¥¹¥¿¥Ã¥¯ÎÎ°è€Î¥µ¥€¥º¡Êž·Ì©€Ë€Ï¡€¥¹¥¿¥Ã¥¯€ÎÄì€«€é²¿¥Ð¥€¥È€á€Þ€Ç€òœñ€­
Ž¹€š€ë€«¡Ë€Ë¥Þ¥¯¥íÄêµÁ€·€Æ€ª€¯€È¡€ext_tsk Æâ€Ç¥¹¥¿¥Ã¥¯Ÿå€ËÄêµÁ€·€¿¥µ¥€
¥º€Î¥À¥ß¡ŒÎÎ°è€ò³ÎÊÝ€·¡€Œ«Ê¬€Î»ÈÍÑ€·€Æ€€€ë¥¹¥¿¥Ã¥¯ÎÎ°è€òÇË²õ€¹€ë€Î€òËÉ
€°¡¥

€Ê€ª¡€€³€ì€òŒÂžœ€¹€ë€¿€á€Ë¡€œèÍý·Ï°ÍÂž€Îµ¡Çœ€Ç€¢€ë alloca €òÍÑ€€€Æ€€€ë¡¥
gcc €Ï alloca €ò¥µ¥Ý¡Œ¥È€·€Æ€€€ë€¬¡€ÂŸ€Î¥³¥ó¥Ñ¥€¥é€òÍÑ€€€ëŸì¹ç€Ë€Ï¡€
alloca €ò¥µ¥Ý¡Œ¥È€·€Æ€€€ë€«³ÎÇ§€¬É¬Í×€Ç€¢€ë¡¥€Þ€¿¡€alloca €òÍÑ€€€ëŸì¹ç
€Ë¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë€¬É¬Í×€ÊŸì¹ç€Ë€Ï¡€tool_config.h €«€é¥€¥ó¥¯¥ë¡Œ¥É
€¹€ëÉ¬Í×€¬€¢€ë¡¥

(7) ¥¿¡Œ¥²¥Ã¥È°ÍÂž€ÎœéŽü²œ¡¿œªÎ»œèÍý

(7-1) void cpu_initialize(void)

¥×¥í¥»¥Ã¥µ°ÍÂž€ÎœéŽü²œœèÍý¡¥¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý€Ç¡€¥«¡Œ¥Í¥ëÆâ€Î³Æ¥â¥ž¥å
¡Œ¥ë€òœéŽü²œ€¹€ëÁ°€ËžÆ€Ð€ì€ë¡¥

(7-2) void sys_initialize(void)

¥·¥¹¥Æ¥à°ÍÂž€ÎœéŽü²œœèÍý¡¥¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý€Ç¡€cpu_initialize €ËÂ³
€€€ÆžÆ€Ð€ì€ë¡¥

(7-3) void tool_initialize(void)

³«È¯ŽÄ¶­°ÍÂž€ÎœéŽü²œœèÍý¡¥¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý€Ç¡€sys_initialize €ËÂ³
€€€ÆžÆ€Ð€ì€ë¡¥

Ÿå€Î3€Ä€ÎŽØ¿ô€Ï¡€¥«¡Œ¥Í¥ëµ¯Æ°œèÍý¡Êkernel_start ŽØ¿ô¡Ë€ÎºÇœé€Ç€³€Îœç€Ë
žÆ€ÓœÐ€µ€ì€ë¡¥3€Ä€ÎŽØ¿ô€òžÆ€ÓœÐ€·€¿žå€Î»þÅÀ€Ç¡€CPU¥í¥Ã¥¯ŸõÂÖ€Ë€Ê€Ã€Æ€€
€Ê€±€ì€Ð€Ê€é€Ê€€¡¥

(7-4) void cpu_terminate(void);

¥×¥í¥»¥Ã¥µ°ÍÂž€ÎœªÎ»»þœèÍý¡¥¥«¡Œ¥Í¥ë€ÎœªÎ»œèÍý€ÇžÆ€Ð€ì€ë¡¥

(7-5) sys_exit(void)

¥·¥¹¥Æ¥à€ÎœªÎ»œèÍý¡¥¥«¡Œ¥Í¥ë€ÎœªÎ»œèÍý€Ç¡€cpu_terminate €ËÂ³€€€ÆžÆ€Ð€ì
€ë¡¥€³€ÎŽØ¿ô€«€é€Ï¥ê¥¿¡Œ¥ó€·€Ê€€¡¥ROM¥â¥Ë¥¿€ò»ý€Ä¥·¥¹¥Æ¥à€Ç€Ï¡€ROM¥â¥Ë
¥¿žÆœÐ€·€ÇŒÂžœ€¹€ë€³€È€òÁÛÄê€·€Æ€€€ë¡¥

(7-6) call_atexit(void)

³«È¯ŽÄ¶­°ÍÂž€ÎœªÎ»œèÍý¡¥É¬Í×€Ë±þ€ž€Æ¡€atexit €Ë€è€Ã€ÆÅÐÏ¿€µ€ì€¿ŽØ¿ô€Î
ŒÂ¹Ô€ä C++ €Ë€ª€±€ë¥Ç¥¹¥È¥é¥¯¥¿€ÎŒÂ¹Ô€ò¹Ô€Š¡¥

(8) ³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã³°¥Ï¥ó¥É¥é€ÎÄêµÁ

(8-1) void define_inh(INHNO inhno, FP inthdr)

³ä¹þ€ß¥Ï¥ó¥É¥éÈÖ¹æ inhno €Îµ¯Æ°ÈÖÃÏ€ò inthdr €ËÀßÄê€¹€ë¡¥³ä¹þ€ßŽÉÍýµ¡
Çœ€ÎœéŽü²œœèÍý€«€éžÆ€Ð€ì€ë¡¥

(8-2) void define_exc(EXCNO excno, FP exchdr)

CPUÎã³°¥Ï¥ó¥É¥éÈÖ¹æ excno €Îµ¯Æ°ÈÖÃÏ€ò exchdr €ËÀßÄê€¹€ë¡¥CPUÎã³°¥Ï¥ó
¥É¥éŽÉÍýµ¡Çœ€ÎœéŽü²œœèÍý€«€éžÆ€Ð€ì€ë¡¥

(9) CPUÎã³°È¯Àž»þÅÀ€Î¥·¥¹¥Æ¥àŸõÂÖ€Î»²ŸÈ

(9-1) BOOL exc_sense_context(VP p_excinf)

CPUÎã³°€¬È¯Àž€·€¿¥³¥ó¥Æ¥­¥¹¥È€¬¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ÎŸì¹ç€Ï FALSE¡€Èó
¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ÎŸì¹ç€Ï TRUE €òÊÖ€¹ŽØ¿ô¡¥CPUÎã³°¥Ï¥ó¥É¥é€«€éžÆ€Ð€ì
€¿¥µ¡Œ¥Ó¥¹¥³¡Œ¥ëœèÍý€«€éžÆ€Ð€ì€ë¡¥p_excinf €Ë€Ï¡€CPUÎã³°¥Ï¥ó¥É¥é€Ø€Î°ú
¿ô€¬€œ€Î€Þ€ÞÅÏ€µ€ì€ë¡¥

(9-2) BOOL exc_sense_lock(VP p_excinf)

CPUÎã³°€¬È¯Àž€·€¿¥³¥ó¥Æ¥­¥¹¥È€¬¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÎŸì¹ç€Ï TRUE¡€CPU¥í¥Ã¥¯
²òœüŸõÂÖ€Î»þ€Ï FALSE €òÊÖ€¹ŽØ¿ô¡¥CPUÎã³°¥Ï¥ó¥É¥é€«€éžÆ€Ð€ì€¿¥µ¡Œ¥Ó¥¹¥³
¡Œ¥ëœèÍý€«€éžÆ€Ð€ì€ë¡¥p_excinf €Ë€Ï¡€CPUÎã³°¥Ï¥ó¥É¥é€Ø€Î°ú¿ô€¬€œ€Î€Þ€Þ
ÅÏ€µ€ì€ë¡¥

(10) TCB Ãæ€Î¥Õ¥£¡Œ¥ë¥É€Î¥Ó¥Ã¥ÈÉý€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

TCB Ãæ€Î¥Õ¥£¡Œ¥ë¥É€ÎÇÛÃÖ€ÏÀ­Çœ€ËÂç€­€¯±Æ¶Á€¹€ë€È»×€ï€ì€ë€¿€á¡€¥¿¡Œ¥²¥Ã
¥È°ÍÂž€Ë¥Õ¥£¡Œ¥ë¥É€Î¥Ó¥Ã¥ÈÉý€òÊÑ¹¹€Ç€­€ë€è€Š€Ë€·€Æ€€€ë¡¥¶ñÂÎÅª€Ë€Ï¡€°Ê
²Œ€Î2€Ä€Î¥Õ¥£¡Œ¥ë¥É€Î¥Ó¥Ã¥ÈÉý€òÊÑ¹¹€Ç€­€ë¡¥€³€ì€é€Î¥Þ¥¯¥í€òÄêµÁ€·€Ê€€
Ÿì¹ç¡€ºÇŸ®¥Ó¥Ã¥ÈÉý€È€Ê€ë¡¥

(10-1) TBIT_TCB_TSTAT           tstat¡Ê¥¿¥¹¥¯ŸõÂÖ¡Ë€Î¥Ó¥Ã¥ÈÉý
(10-2) TBIT_TCB_PRIORITY        priority¡ÊÍ¥ÀèÅÙ¡Ë¥Õ¥£¡Œ¥ë¥É€Î¥Ó¥Ã¥ÈÉý

32¥Ó¥Ã¥È¥×¥í¥»¥Ã¥µ€ÎŸì¹ç€Ë€Ï¡€€³€ì€é€ò 8 €ËÄêµÁ€¹€ë€Î€¬žúÎšÅª€Ç€¢€ë¡¥

(11) ¥Ó¥Ã¥È¥Þ¥Ã¥×¥µ¡Œ¥Á€Ë¥Ó¥Ã¥È¥µ¡Œ¥ÁÌ¿Îá€ò»È€Š€¿€á€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥×¥í¥»¥Ã¥µ€¬¥Ó¥Ã¥È¥µ¡Œ¥ÁÌ¿Îá€ò»ý€ÄŸì¹ç¡€¥ì¥Ç¥£¥­¥å¡Œ€Î¥Ó¥Ã¥È¥Þ¥Ã¥×¥µ¡Œ
¥Á€Ë€œ€ÎÌ¿Îá€òÍÑ€€€¿Êý€¬žúÎš€¬€è€€¡¥€œ€ÎŸì¹ç¡€°Ê²Œ€ÎŽØ¿ô€ª€è€Ó¥Þ¥¯¥í€ò
¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄêµÁ€¹€ë¡¥

(11-1) CPU_BITMAP_SEARCH

¥×¥í¥»¥Ã¥µ€Î¥Ó¥Ã¥È¥µ¡Œ¥ÁÌ¿Îá€òÍÑ€€€ëŸì¹ç¡€€³€Î¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥€³€Î¥Þ
¥¯¥í€òÄêµÁ€¹€ë€³€È€Ë€è€ê¡€¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€«€é bitmap_search €¬Œè€ê
œü€«€ì€ë¡¥

(11-2) UINT bitmap_search(UINT bitmap)

¥Ó¥Ã¥È¥µ¡Œ¥Á€ò¹Ô€ŠŽØ¿ô¡¥bitmap Æâ€Î 1 €Î¥Ó¥Ã¥È€ÎÆâ¡€ºÇ€â²Œ°Ì€Î€â€Î€ò¥µ
¡Œ¥Á€·¡€€œ€Î¥Ó¥Ã¥ÈÈÖ¹æ€òÊÖ€¹¡¥¥Ó¥Ã¥ÈÈÖ¹æ€Ï¡€ºÇ²Œ°Ì¥Ó¥Ã¥È¡ÊLSB¡Ë€ò 0 €È
€¹€ë¡¥bitmap €Î²Œ°Ì16¥Ó¥Ã¥È€Ë¡€É¬€º 1 €Î¥Ó¥Ã¥È€¬€¢€ë¡Ê€¹€Ê€ï€Á¡€bitmap 
€Ë 0 €¬»ØÄê€µ€ì€ë€³€È€Ï€Ê€€¡Ë€³€È€ò²ŸÄê€·€Æ€è€€¡¥

Éžœà¥é¥€¥Ö¥é¥ê€Ë¥Ó¥Ã¥È¥µ¡Œ¥ÁÌ¿Îá€òÍÑ€€€¿ ffs €¬€¢€ëŸì¹ç¡€ffs €òÍÑ€€€Æ 
bitmap_search €òŒ¡€Î€è€Š€ËÄêµÁ€¹€ì€Ð€è€€¡¥
        #define bitmap_search(bitmap)   (ffs(bitmap) - 1)

¥×¥í¥»¥Ã¥µ€Î»ý€Ä¥Ó¥Ã¥È¥µ¡Œ¥ÁÌ¿Îá€¬¡€ºÇ€âŸå°Ì€Î 1 €Î¥Ó¥Ã¥È€ò¥µ¡Œ¥Á€¹€ë
€â€Î€Ç€¢€ëŸì¹ç€Ë€Ï¡€Œ¡€Î¥Þ¥¯¥í€òÄêµÁ€·€Æ¡€¥Ó¥Ã¥È€Î³äÉÕ€±€òÊÑ¹¹€¹€ë€³€È
€¬€Ç€­€ë¡¥

(11-3) UINT PRIMAP_BIT(pri)

¥¿¥¹¥¯Í¥ÀèÅÙ€ÎÆâÉôÉœžœ¡ÊºÇ¹âÍ¥ÀèÅÙ€ò 0 €È€¹€ë¡Ë€ò¡€€œ€ì€ËÂÐ±þ€¹€ë¥Ó¥Ã
¥È¥Þ¥Ã¥×€ËÊÑŽ¹€¹€ë¡¥¥Ç¥Õ¥©¥ë¥È€ÎÄêµÁ€ÏŒ¡€ÎÄÌ€ê¡¥
        #define PRIMAP_BIT(pri)         (1 << (pri))

(12) ¥¿¡Œ¥²¥Ã¥È°ÍÂž€Î¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë¡Ê¥ª¥×¥·¥ç¥ó¡Ë

°Ê²Œ€Î¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë€ò¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ë¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç€Ë€Ï¡€€œ€ÎœèÍý¥ë
¡Œ¥Á¥ó€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄêµÁ€¹€ë¡¥

(12-1) chg_ixx
(12-2) get_ixx
(12-3) dis_int
(12-4) ena_int

(13) À­ÇœÉŸ²ÁÍÑ¥·¥¹¥Æ¥à»þ¹ïŽØÏ¢€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

(13-1) SUPPORT_VXGET_TIM

¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€Î vxget_tim¥µ¡Œ¥Ó¥¹¥³¡Œ¥ëœèÍý€òÍÑ€€€ëŸì¹ç€Ë¡€€³€Î¥Þ
¥¯¥í€òÄêµÁ€¹€ë¡¥

(13-2) hw_timer.h

¥¿¡Œ¥²¥Ã¥È°ÍÂž€Î¥¿¥€¥Þ¥â¥ž¥å¡Œ¥ë€Î¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë¡¥¥¿¡Œ¥²¥Ã¥ÈÈó°Í
ÂžÉô€Î vxget_tim¥µ¡Œ¥Ó¥¹¥³¡Œ¥ëœèÍý€òÍÑ€€€ëŸì¹ç¡€¥¿¡Œ¥²¥Ã¥È°ÍÂž€Î¥¿¥€¥Þ
¥â¥ž¥å¡Œ¥ë€¬É¬Í×€Ë€Ê€ë¡¥€œ€Î€¿€á€Î¥€¥ó¥¯¥ë¡Œ¥É¥Õ¥¡¥€¥ë€Ç€¢€ë 
hw_timer.h €Ï¡€¥·¥¹¥Æ¥à¥µ¡Œ¥Ó¥¹€Î¥·¥¹¥Æ¥à¥¯¥í¥Ã¥¯¥É¥é¥€¥Ð€ÇÍÑ€€€ë€â€Î
€È¶ŠÄÌ€Ë€·€Æ€€€ë¡¥

(14) ¥«¡Œ¥Í¥ë€ÎÆâÉôŒ±ÊÌÌŸ€Î¥ê¥Í¡Œ¥à€È€œ€Î²òœü¡Êcpu_rename.h¡€
     cpu_unrename.h¡€sys_rename.h¡€sys_unrename.h¡Ë

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ€€€Æ€€€ëŒ±ÊÌÌŸ¡Ê¥â¥ž¥å¡Œ¥ëÆâ€ËÊÄ€ž€¿Œ±ÊÌÌŸ€òœü€¯¡Ë
€ò¡€ŠÌITRON4.0»ÅÍÍ€ËœŸ€Ã€Æ _kernel_ €Ç»Ï€Þ€ë€â€Î€Ë¥ê¥Í¡Œ¥à€¹€ëÉ¬Í×€¬€¢
€ë¡¥

¶ñÂÎÅª€Ë€Ï¡€¥×¥í¥»¥Ã¥µ°ÍÂžÉô€ÇÍÑ€€€Æ€€€ëŒ±ÊÌ»Ò€ò¥ê¥¹¥È¥¢¥Ã¥×€·€¿¥Õ¥¡¥€
¥ë€ò cpu_rename.def €Ë¡€¥·¥¹¥Æ¥à°ÍÂžÉô€ÇÍÑ€€€Æ€€€ëŒ±ÊÌ»Ò€ò¥ê¥¹¥È¥¢¥Ã¥×
€·€¿¥Õ¥¡¥€¥ë€ò sys_rename.def €ËºîÀ®€¹€ë¡¥genrename »È€Ã€Æ¡€€³€ì€é€Î¥Õ¥¡
¥€¥ë€«€é¡€€œ€ì€Ÿ€ì cpu_rename.h €È cpu_unrename.h¡€sys_rename.h €È 
sys_unrename.h €òÀžÀ®€¹€ë¡¥xxx_rename.def €«€é xxx_rename.h €È 
xxx_unrename.h €òÀžÀ®€¹€ë€Ë€Ï¡€¡Ö$(KERNEL_DIR)/utils/genrename xxx¡×€ò
ŒÂ¹Ô€¹€ì€Ð€è€€¡¥

€Þ€¿¡€cpu_config.h €ÎÀèÆ¬€«€é cpu_rename.h €ò¡€sys_config.h €ÎÀèÆ¬€«€é 
sys_rename.h €ò¥€¥ó¥¯¥ë¡Œ¥É€¹€ë¡¥

genrename €¬ÀžÀ®€¹€ë¥Õ¥¡¥€¥ë€ÏŒ¡€Î€è€Š€ÊÆâÍÆ€Ç€¢€ë¡¥xxx_rename.def €Ë
xxxx €È€€€ŠŒ±ÊÌ»Ò€¬ŽÞ€Þ€ì€Æ€€€ëŸì¹ç¡€xxx_rename.h €Ë€ÏŒ¡€Î€è€Š€Ê¥Þ¥¯¥í
ÄêµÁ€¬ÀžÀ®€µ€ì€ë¡¥

#define xxxx            _kernel_xxxx
#ifdef LABEL_ASM
#define _xxxx           __kernel_xxxx
#endif /* LABEL_ASM */

€³€³€Ç¡€LABEL_ASM €Ï¡€¥¢¥»¥ó¥Ö¥êžÀžì¥ì¥Ù¥ë€ÎŒ±ÊÌÌŸ€¬¡€CžÀžì¥ì¥Ù¥ë€ÎŒ±
ÊÌÌŸ€ÎÀèÆ¬€Ë "_" €¬ÉÕ€€€¿€â€Î€Ë€Ê€ëŸì¹ç€ËÄêµÁ€¹€Ù€­¥Þ¥¯¥í€Ç€¢€ë¡ÊÄêµÁ
€ÎÊýË¡€Ë€Ä€€€Æ€Ï¡Ö¥·¥¹¥Æ¥à¹œÃÛÊýË¡€ÎÀßÄê¡×€ò»²ŸÈ¡Ë¡¥

€Þ€¿¡€xxx_unrename.h €Ë€ÏŒ¡€Î€è€Š€Ê¥Þ¥¯¥íÄêµÁ²òœü€¬ÀžÀ®€µ€ì€ë¡¥

#undef xxxx
#ifdef LABEL_ASM
#undef _xxxx
#endif /* LABEL_ASM */

(15) ¥È¥ì¡Œ¥¹¥í¥°€Î€¿€á€Î¥Þ¥¯¥íÄêµÁ¡Êtool_config.h¡Ë

¥«¡Œ¥Í¥ë€Î¥È¥ì¡Œ¥¹¥í¥°€ÎŒèÆÀ€Ï¡€³«È¯ŽÄ¶­°ÍÂžÉô€Ç¥È¥ì¡Œ¥¹¥í¥°€Î€¿€á€Î¥Þ
¥¯¥í€òÄêµÁ€¹€ë€³€È€Ë€è€Ã€Æ¹Ô€Š¡¥¥È¥ì¡Œ¥¹¥í¥°€Î€¿€á€Î¥Þ¥¯¥í€ÏÌó150ŒïÎà
€¢€ê¡€ŒèÆÀ€·€¿€€¥í¥°ŸðÊó€ËÂÐ±þ€¹€ë¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥¥È¥ì¡Œ¥¹¥í¥°€òŒèÆÀ
€·€Ê€€Ÿì¹ç€Ë€Ï¡€€³€ì€é€Î¥Þ¥¯¥í€ò¶õ€ËÄêµÁ€¹€ì€Ð€è€€¡¥

(16) €œ€ÎÂŸ

(16-1) TARGET_NAME

µ¯Æ°¥á¥Ã¥»¡Œ¥ž€Î¥¿¡Œ¥²¥Ã¥ÈÌŸ¡¥

(16-2) void sys_putc(char c)

¥¿¡Œ¥²¥Ã¥È¥·¥¹¥Æ¥à€ÎÄã¥ì¥Ù¥ë€ÎÊž»úœÐÎÏ¥ë¡Œ¥Á¥ó¡¥ROM¥â¥Ë¥¿€ò»ý€Ä¥·¥¹¥Æ
¥à€Ç€Ï¡€ROM¥â¥Ë¥¿žÆ€ÓœÐ€·€ÇŒÂžœ€¹€ë€³€È€òÁÛÄê€·€Æ€€€ë¡¥

(16-3) OMIT_CALLTEX¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€¬ calltex €òÄó¶¡€¹€ëÉ¬Í×€¬€Ê€€Ÿì¹ç€Ë¡€€³€Î¥Þ¥¯¥í€ò
ÄêµÁ€¹€ë¡¥ŸÜ€·€¯€Ï¡€¡Ö¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°ŽØ¿ô€È€œ€ÎÃæ€Ç»²ŸÈ€¹
€ë TCB €Î¥Õ¥£¡Œ¥ë¥É¡×€ÎÀá€ò»²ŸÈ€Î€³€È¡¥

(16-4) LABEL_ALIAS(new_label, defined_label)¡Ê¥ª¥×¥·¥ç¥ó¡€tool_config.h¡Ë

new_label €ò defined_label €ÈÆ±€ž¥¢¥É¥ì¥¹€ËÄêµÁ€¹€ë€¿€á€Î¥Þ¥¯¥í¡¥€³€Î
€è€Š€Ê¥Þ¥¯¥í€òŒÂžœ€Ç€­€Ê€€Ÿì¹ç€Ë€Ï¡€ÄêµÁ€òŸÊÎ¬€¹€ë€³€È€¬€Ç€­€ë¡¥€³€Î¥Þ
¥¯¥íÄêµÁ€Ï¡€tool_config.h €ÎÃæ€Ç¹Ô€Š€Î€òÉžœà€È€¹€ë¡¥

(16-5) COPYRIGHT_CPU¡Ê¥ª¥×¥·¥ç¥ó¡Ë
(16-6) COPYRIGHT_SYS¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥«¡Œ¥Í¥ëµ¯Æ°»þ€Î¥á¥Ã¥»¡Œ¥ž€Ë¡€€œ€ì€Ÿ€ì¥×¥í¥»¥Ã¥µ°ÍÂžÉô€ª€è€Ó¥·¥¹¥Æ¥à°Í
ÂžÉô€ÎÃøºîž¢ÉœŒš€òÄÉ²Ã€¹€ë€¿€á€Î¥Þ¥¯¥í¡¥

(16-7) __STK_UNIT¡Ê¥ª¥×¥·¥ç¥ó¡Ë
(16-8) __MPF_UNIT¡Ê¥ª¥×¥·¥ç¥ó¡Ë

Éžœà€Ç€Ï¡€¥¹¥¿¥Ã¥¯ÎÎ°è€ÈžÇÄêÄ¹¥á¥â¥ê¥×¡Œ¥ëÎÎ°è€Ï¡€VP·¿€Î¥µ¥€¥º€Ë¥¢¥é¥€
¥ó€¹€ë¡¥€³€ì€ò¡€€è€êÂç€­€€Ã±°Ì€Ç¥¢¥é¥€¥ó€µ€»€ëÉ¬Í×€¬€¢€ëŸì¹ç€Ë€Ï¡€
__STK_UNIT €È __MPF_UNIT €ò¡€€œ€ì€Ÿ€ì¥¢¥é¥€¥ó€µ€»€ëÃ±°Ì€Î¥Ç¡Œ¥¿·¿€ËÄê
µÁ€¹€ë¡¥€¿€À€·¡€__STK_UNIT €ª€è€Ó __MPF_UNIT €Î¥µ¥€¥º€Ï¡€2€Î¶ÒŸè€Ç€Ê€±
€ì€Ð€Ê€é€Ê€€¡¥

(16-9) __EMPTY_LABEL(x, y)¡Ê¥ª¥×¥·¥ç¥ó¡€tool_config.h¡Ë

·¿ x €Î¥µ¥€¥º 0 €ÎÇÛÎó y €òÄêµÁ€¹€ë€¿€á€Î¥Þ¥¯¥í¡¥¥µ¥€¥º 0 €ÎÇÛÎó€òÄêµÁ
€Ç€­€ë¥³¥ó¥Ñ¥€¥é¡ÊGNU³«È¯ŽÄ¶­€Ï€³€ì€Ë³ºÅö¡Ë€Ç€ÏÄêµÁ€òŸÊÎ¬€¹€ë€³€È€¬€Ç
€­€ë¡¥€³€Î¥Þ¥¯¥íÄêµÁ€Ï¡€tool_config.h €ÎÃæ€Ç¹Ô€Š€Î€òÉžœà€È€¹€ë¡¥


£Ž¡¥¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€¬ÍÑ€€€ë€³€È€¬€Ç€­€ë¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€ÎÊÑ¿ô¡ŠŽØ¿ô

(1) ¥¿¥¹¥¯ŽÉÍýŽØÏ¢€ÎÊÑ¿ô

(1-1) TCB *runtsk

ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯¡Ê¡á¥×¥í¥»¥Ã¥µ€¬¥³¥ó¥Æ¥­¥¹¥È€ò»ý€Ã€Æ€€€ë¥¿¥¹¥¯¡Ë€Î TCB 
€ò»Ø€¹¥Ý¥€¥ó¥¿¡¥ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç€Ï NULL €Ë€¹€ë¡¥¥µ¡Œ¥Ó¥¹¥³¡Œ
¥ë€ÎœèÍýÃæ€Ç¡€Œ«¥¿¥¹¥¯¡Ê¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë€òžÆ€ÓœÐ€·€¿¥¿¥¹¥¯¡Ë€ËŽØ€¹€ëŸðÊó
€ò»²ŸÈ€¹€ëŸì¹ç€Ï runtsk €ò»È€Š¡¥¥«¡Œ¥Í¥ë€ÎœéŽü²œœèÍý°Ê³°€Ç¡€€³€ÎÊÑ¿ô€ò
œñ€­Ž¹€š€ë€Î€Ï¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã¡Ê€¹€Ê€ï€Á¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô¡Ë€Î€ß
€Ç€¢€ë¡¥

(1-2) TCB *schedtsk

ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯€ÎÃæ€ÇºÇ¹âÍ¥Àèœç°Ì€Î¥¿¥¹¥¯€Î TCB €ò»Ø€¹¥Ý¥€¥ó¥¿¡¥ŒÂ¹Ô
€Ç€­€ë¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç€Ï NULL €È€Ê€ë¡¥¥Ç¥£¥¹¥Ñ¥Ã¥Á¶Ø»ßŸõÂÖ€Ê€É¡€¥Ç¥£¥¹
¥Ñ¥Ã¥Á€¬ÊÝÎ±€µ€ì€Æ€€€ëŽÖ€Ï¡€runtsk €È°ìÃ×€·€Æ€€€ë€È€ÏžÂ€é€Ê€€¡¥€³€ÎÊÑ
¿ô€òœñ€­Ž¹€š€ë€Î€Ï¥¹¥±¥ž¥å¡Œ¥é€Î€ß€Ç¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€Ï€³€ÎÊÑ¿ô€òœñ€­
Ž¹€š€Æ€Ï€Ê€é€Ê€€¡¥

(1-3) BOOL reqflg

³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã³°¥Ï¥ó¥É¥é€ÎœÐžýœèÍý€Ë¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€Þ€¿€Ï
¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€òÍ×µá€¹€ë€³€È€òŒš€¹¥Õ¥é¥°¡¥€³€ÎÊÑ¿ô€Ï¥µ¡Œ
¥Ó¥¹¥³¡Œ¥ëœèÍý¡Ê¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô¡Ë€Ç¥»¥Ã¥È€·¡€³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã
³°¥Ï¥ó¥É¥é€ÎœÐžýœèÍý¡Ê¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô¡Ë€Ç»²ŸÈ¡¿¥¯¥ê¥¢€¹€ë¡¥

(1-4) BOOL enadsp

¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Áµö²ÄŸõÂÖ€Ç€¢€ë¡Ê€¹€Ê€ï€Á¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¶Ø»ßŸõÂÖ
€Ç€Ê€€¡Ë€³€È€òŒš€¹¥Õ¥é¥°¡¥€³€ÎÊÑ¿ô€Ï¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë¡Êdis_dsp¡€ena_dsp¡€
¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ë chg_ixx¡ËœèÍý€ÎÃæ€Çœñ€­Ž¹€š€ë¡¥

€Þ€¿¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã¡Ê¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô¡Ë€ÎÃæ€Ç¡€ŒÂ¹Ô€Ç€­€ë¥¿¥¹¥¯
€¬€Ç€­€ë€Î€òÂÔ€ÄŽÖ€Ëµ¯Æ°€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐžý€Ç¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã
€¬žÆ€Ð€ì€Ê€€€è€Š€Ë€¹€ë€¿€á€Ë¡€€³€ÎÊÑ¿ô€ò°ì»þÅª€Ë FALSE €ËÀßÄê€¹€ë€³€È
€¬€Ç€­€ë¡¥

(2) ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°ŽØ¿ô€È€œ€ÎÃæ€Ç»²ŸÈ€¹€ë TCB €Î¥Õ¥£¡Œ¥ë¥É

(2-1) void calltex(void)
(2-2) void call_texrtn(void)

¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò¹Ô€ŠŽØ¿ô¡¥calltex €Ï¡€ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯€¬
¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°Ÿò·ï€òËþ€¿€·€Æ€€€ì€Ð¡€call_texrtn €òžÆ€ÓœÐ
€¹¡¥call_texrtn €Ï¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€ÎžÆ€ÓœÐ€·€ò¹Ô€Š¡¥¥¿¥¹¥¯Îã³°
œèÍý¥ë¡Œ¥Á¥ó€òžÆ€ÓœÐ€¹»þ€Ï¡€°ì»þÅª€ËCPU¥í¥Ã¥¯€ò²òœü€¹€ë¡¥

€³€ì€é€ÎŽØ¿ô€Ï¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€ä³ä¹þ€ß¥Ï¥ó¥É¥é¡¿CPUÎã³°¥Ï¥ó¥É¥é€ÎœÐžý
œèÍý€«€é¡€CPU¥í¥Ã¥¯ŸõÂÖ€ÇžÆ€Ð€ì€ë€³€È€òÁÛÄê€·€Æ€€€ë¡¥calltex €òžÆ€ÓœÐ
€¹€Î€¬ºÇ€âŽÊÃ±€Ç€¢€ë€¬¡€ŒÂ¹ÔžúÎš€òŸå€²€ë€¿€á€Ë€Ï¡€µ¯Æ°Ÿò·ï€Î¥Á¥§¥Ã¥¯€ò
¥¢¥»¥ó¥Ö¥êžÀžì€Çµ­œÒ€·¡€call_texrtn €òžÆ€ÓœÐ€·€¿Êý€¬€è€€¡¥¥Á¥§¥Ã¥¯€¹€Ù
€­µ¯Æ°Ÿò·ï€Ë€Ä€€€Æ€Ï¡€¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€Î calltex €Î¥œ¡Œ¥¹¥³¡Œ¥É€ò»²
ŸÈ€¹€ë€³€È¡¥€Þ€¿€œ€ÎŸì¹ç€Ë€Ï¡€OMIT_CALLTEX €ò¥Þ¥¯¥íÄêµÁ€¹€ë€³€È€Ç¡€¥¿
¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€«€é calltex €¬Œè€êœü€«€ì€ë¡¥

(2-3) BOOL enatex
(2-4) TEXPTN texptn

call_texrtn €òžÆ€ÓœÐ€¹€¿€á€Ë¡€µ¯Æ°Ÿò·ï€Î¥Á¥§¥Ã¥¯€ò¥¢¥»¥ó¥Ö¥êžÀžì€Çµ­œÒ
€¹€ëŸì¹ç€Ë€Ï¡€TCB Æâ€Î€³€ì€é€Î¥Õ¥£¡Œ¥ë¥É€ò»²ŸÈ€¹€ëÉ¬Í×€¬€¢€ë¡¥

(3) ¥·¥¹¥Æ¥à¥í¥°µ¡Çœ

°ÛŸï»öŸÝ€òÄÌÃÎ€¹€ë€¿€á€Ë¡€¥·¥¹¥Æ¥à¥í¥°µ¡Çœ€Ø€Î¥í¥°œÐÎÏŽØ¿ô€òÍÑ€€€ë€³€È
€¬€Ç€­€ë¡¥¥·¥¹¥Æ¥à¥í¥°µ¡Çœ€Ë€Ä€€€Æ€Ï¡€¥æ¡Œ¥¶¥º¥Þ¥Ë¥å¥¢¥ë€ò»²ŸÈ€¹€ë€³€È¡¥


£µ¡¥¥·¥¹¥Æ¥à¥µ¡Œ¥Ó¥¹ÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É

5.1 ¥·¥¹¥Æ¥à¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥ì¥€¥ä¡ÊSIL¡Ë€Î€¿€á€ÎÄêµÁ

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥·¥¹¥Æ¥à¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥ì¥€¥ä¡ÊSIL¡Ë€Î€¿€á
€ÎÄêµÁ€ÏŒ¡€ÎÄÌ€ê€Ç€¢€ë¡¥€³€ì€é€ÎÄêµÁ€Ï¡€cpu_defs.h€Þ€¿€Ïsys_defs.h¡Ê€Þ
€¿€Ï€œ€ì€é€«€é¥€¥ó¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á€ë¡¥€Þ€¿¡€ŽØ¿ô€ÎŒÂÂÎ€¬
É¬Í×€ÊŸì¹ç¡€CžÀžì€ÎŸì¹ç€Ïcpu_config.c€Þ€¿€Ïsys_config.c€Ë¡€¥¢¥»¥ó¥Ö¥ê
žÀžì€ÎŸì¹ç€Ïcpu_support.S€Þ€¿€Ïsys_support.S€Ëµ­œÒ€¹€ë¡¥

(1) ÈùŸ¯»þŽÖÂÔ€ÁŽØÏ¢

(1-1) void sil_dly_nse(UINT dlytim)

dlytim€Ç»ØÄê€µ€ì€ë»þŽÖ¡ÊÃ±°Ì: 1¥Ê¥ÎÉÃ¡ËÂÔ€ÄŽØ¿ô€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó
¶¡€¹€ë¡¥

ŒÂžœÊýË¡€Ï¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ç€¢€ë€¬¡€°Ê²Œ€ÎŽØ¿ô€ò¥¢¥»¥ó¥Ö¥êžÀžì€Çµ­œÒ€·€¿
€â€Î€ò¡€¥×¥í¥»¥Ã¥µ°ÍÂžÉô€ËŽÞ€á€ë€Î€òÉžœàÅª€ÊÊýË¡€È€¹€ë¡¥¥¢¥»¥ó¥Ö¥êžÀžì
€Çµ­œÒ€¹€ë€Î€Ï¡€¥³¥ó¥Ñ¥€¥é€ÎºÇÅ¬²œ€Ë°ÍÂž€·€Ê€€€è€Š€Ë€¹€ë€¿€á€Ç€¢€ë¡¥€Þ
€¿€³€ÎŽØ¿ô€Ï¡€€Ç€­€ëžÂ€ê¥á¥â¥ê¥¢¥¯¥»¥¹€ò¹Ô€ï€Ê€€€è€Š€ËŒÂÁõ€¹€Ù€­€Ç€¢€ë¡¥

        void sil_dly_nse(UINT dlytim)
        {
                if (dlytim > SIL_DLY_TIM1) {
                        dlytim -= SIL_DLY_TIM1;
                        while (dlytim > SIL_DLY_TIM2) {
                                dlytim -= SIL_DLY_TIM2;
                        }
                }
        }

(1-2) SIL_DLY_TIM1¡Ê¥ª¥×¥·¥ç¥ó¡Ë
(1-3) SIL_DLY_TIM2¡Ê¥ª¥×¥·¥ç¥ó¡Ë

sil_dly_nse€òŸåµ­€ÎÉžœàÅª€ÊÊýË¡€ÇŒÂžœ€·€¿Ÿì¹ç¡€€³€Î2€Ä€ÎÄê¿ô€ò¥·¥¹¥Æ¥à
°ÍÂžÉô€Ç¥Þ¥¯¥íÄêµÁ€¹€ë¡¥€Ê€ª¡€€³€Î2€Ä€ÎÄê¿ô€Î·èÄê€òœõ€±€ë¥×¥í¥°¥é¥à€ò
ÍÑ°Õ€·€Æ€€€ë¡¥ŽõËŸ€µ€ì€ëÊý€Ï¡€ÁêÃÌ€µ€ì€¿€€¡¥

(2) ³ä¹þ€ß¥í¥Ã¥¯ŸõÂÖ€ÎÀ©žæŽØÏ¢¡Ê¥ª¥×¥·¥ç¥ó¡Ë

(2-1) SIL_PRE_LOC
(2-2) SIL_LOC_INT()
(2-3) SIL_UNL_INT()

¥¿¡Œ¥²¥Ã¥È°ÍÂž€Ç³ä¹þ€ß¥í¥Ã¥¯ŸõÂÖ€ÎÀ©žæÊýË¡€òÊÑ¹¹€·€¿€€Ÿì¹ç€Ë€Ï¡€€³€ì€é
€Î¥Þ¥¯¥í€Ë€œ€ÎÊýË¡€òÄêµÁ€¹€ë¡¥€³€ì€é¥Þ¥¯¥í€òÄêµÁ€·€Ê€€Ÿì¹ç€Ë€Ï¡€ ¥¿¡Œ
¥²¥Ã¥ÈÈó°ÍÂžÉô€Ë€ª€€€Æ¡€¥«¡Œ¥Í¥ë€ÎCPU¥í¥Ã¥¯€Îµ¡Çœ€òÍÑ€€€Æ³ä¹þ€ß¥í¥Ã¥¯
ŸõÂÖ€¬ŒÂžœ€µ€ì€ë¡¥

(3) ¥×¥í¥»¥Ã¥µ€Î¥š¥ó¥Ç¥£¥¢¥ó€ÎÄêµÁ

(3-1) SIL_ENDIAN

¥ê¥È¥ë¥š¥ó¥Ç¥£¥¢¥ó¥×¥í¥»¥Ã¥µ€Ç€ÏSIL_ENDIAN_LITTLE¡Ê¡á0¡Ë¡€¥Ó¥Ã¥°¥š¥ó¥Ç¥£
¥¢¥ó¥×¥í¥»¥Ã¥µ€Ç€ÏSIL_ENDIAN_BIG¡Ê¡á1¡Ë€Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥

(4) ¥š¥ó¥Ç¥£¥¢¥ó€ÎÈ¿ÅŸ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

(4-1) VH SIL_REV_ENDIAN_H(VH data)
(4-2) VW SIL_REV_ENDIAN_W(VW data)

¥š¥ó¥Ç¥£¥¢¥ó€ÎÈ¿ÅŸ€òžúÎš€è€¯ŒÂžœ€¹€ëÊýË¡€¬€¢€ëŸì¹ç€Ë€Ï¡€€³€ì€é€Î¥Þ¥¯¥í
€Ë€œ€ÎÊýË¡€òÄêµÁ€¹€ë¡¥€³€ì€é€Î¥Þ¥¯¥í€òÄêµÁ€·€Ê€€Ÿì¹ç€Ë€Ï¡€ÉžœàÅª€ÊÊýË¡
€Ç¥š¥ó¥Ç¥£¥¢¥ó€ÎÈ¿ÅŸ€¬¹Ô€ï€ì€ë¡¥

(5) ¥š¥ó¥Ç¥£¥¢¥óÈ¿ÅŸÉÕ€­€Î¥á¥â¥ê¶õŽÖ¥¢¥¯¥»¥¹¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥š¥ó¥Ç¥£¥¢¥ó€òÈ¿ÅŸ€·€Æ¥á¥â¥ê€òÆÉœÐ€·¡¿œñ¹þ€ß€¹€ëžúÎšÅª€ÊÊýË¡€¬€¢€ëŸì¹ç¡€
³ºÅö€¹€ë¥á¥â¥ê¶õŽÖ¥¢¥¯¥»¥¹ŽØ¿ô€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€·¡€¥¿¡Œ¥²¥Ã¥ÈÈó
°ÍÂžÉô€ÎÉžœàÅª€ÊÄêµÁ€òÌµžú€Ë€¹€ë€¿€á€Î¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥

(5-1) VH sil_reh_bem(VP mem)                OMIT_SIL_REH_BEM
(5-2) void sil_wrh_bem(VP mem, VH data)     OMIT_SIL_WRH_BEM
(5-3) VW sil_rew_bem(VP mem)                OMIT_SIL_REW_BEM
(5-4) void sil_wrw_bem(VP mem, VW data)     OMIT_SIL_WRW_BEM

¥ê¥È¥ë¥š¥ó¥Ç¥£¥¢¥ó¥×¥í¥»¥Ã¥µ€Ç€Ï¡€€³€ì€é€Î¥á¥â¥ê¶õŽÖ¥¢¥¯¥»¥¹ŽØ¿ô€ò¥¿¡Œ
¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€·¡€±Š€ËŒš€¹¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥

(5-5) VH sil_reh_lem(VP mem)                OMIT_SIL_REH_LEM
(5-6) void sil_wrh_lem(VP mem, VH data)     OMIT_SIL_WRH_LEM
(5-7) VW sil_rew_lem(VP mem)                OMIT_SIL_REW_LEM
(5-8) void sil_wrw_lem(VP mem, VW data)     OMIT_SIL_WRW_LEM

¥Ó¥Ã¥°¥š¥ó¥Ç¥£¥¢¥ó¥×¥í¥»¥Ã¥µ€Ç€Ï¡€€³€ì€é€Î¥á¥â¥ê¶õŽÖ¥¢¥¯¥»¥¹ŽØ¿ô€ò¥¿¡Œ
¥²¥Ã¥È°ÍÂžÉô€ÇÍÑ°Õ€·¡€±Š€ËŒš€¹¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥

(6) Éžœà€Î¥¢¥¯¥»¥¹ŽØ¿ô€ÎÌµžú²œ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

(6-1) OMIT_SIL_ACCESS

¥·¥ß¥å¥ì¡Œ¥·¥ç¥óŽÄ¶­€Ê€É€Ç¡€€¹€Ù€Æ€Î¥á¥â¥ê¶õŽÖ¥¢¥¯¥»¥¹ŽØ¿ô€ò¥¿¡Œ¥²¥Ã¥È
°ÍÂžÉô€ÇÍÑ°Õ€¹€ëŸì¹ç€Ë€Ï¡€¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€ÎÉžœàÅª€ÊÄêµÁ€òÌµžú€Ë€¹€ë
€¿€á€Ë¡€€³€Î¥Þ¥¯¥í€òÄêµÁ€¹€ë¡¥

5.2 ¥·¥¹¥Æ¥à¥¯¥í¥Ã¥¯¥É¥é¥€¥ÐÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥·¥¹¥Æ¥à¥¯¥í¥Ã¥¯¥É¥é¥€¥ÐÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô
€Ê€É€ÏŒ¡€ÎÄÌ€ê€Ç€¢€ë¡¥€³€ì€é€ÎÄêµÁ€Ï¡€hw_timer.h¡Ê€Þ€¿€Ï€œ€ì€é€«€é¥€¥ó
¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á€ë¡¥ŽØ¿ô€ÎŒÂÂÎ€¬É¬Í×€ÊŸì¹ç€Ë€Ï¡€Å¬ÀÚ€Ê¥Õ¥¡
¥€¥ë€òÍÑ°Õ€¹€ë¡¥

(1) INHNO_TIMER

¥¿¥€¥Þ³ä¹þ€ß¥Ï¥ó¥É¥é€Î¥Ù¥¯¥¿ÈÖ¹æ€òÄêµÁ€·€¿¥Þ¥¯¥í€ò¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€Ç
Äó¶¡€¹€ë¡¥

(2) ¥¿¥€¥Þ€ÎÀ©žæ

(2-1) void hw_timer_initialize(void)

¥¿¥€¥Þ€òœéŽü²œ€·¡€¥¿¥€¥Þ³ä¹þ€ß€òŒþŽüÅª€ËÈ¯Àž€µ€»€ëŽØ¿ô€ò¡€¥¿¡Œ¥²¥Ã¥È°Í
ÂžÉô€ÇÄó¶¡€¹€ë¡¥¥¿¥€¥Þ³ä¹þ€ß€ÎŒþŽü€Ï¡€TIC_NUME€ÈTIC_DENO€Ç»ØÄê€µ€ì€¿»þ
ŽÖ€È°ìÃ×€µ€»€ë¡¥

(2-2) void hw_timer_int_clear(void)

¥¿¥€¥Þ³ä¹þ€ßÍ×µá€ò¥¯¥ê¥¢€¹€ëŽØ¿ô€ò¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(2-3) void hw_timer_terminate(void)

¥¿¥€¥Þ€ÎÆ°ºî€òÄä»ß€µ€»¡€¥¿¥€¥Þ³ä¹þ€ß€òÈ¯Àž€·€Ê€€€è€Š€Ë€¹€ëŽØ¿ô€ò¡€¥¿¡Œ
¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(3) À­ÇœÉŸ²ÁÍÑ¥·¥¹¥Æ¥à»þ¹ï»²ŸÈµ¡ÇœŽØÏ¢¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€Îvxget_tim¥µ¡Œ¥Ó¥¹¥³¡Œ¥ëœèÍý€òÍÑ€€€ëŸì¹ç€Ë¡€°Ê²Œ€Î
¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(3-1) CLOCK

¥¿¥€¥ÞÃÍ€ÎÆâÉôÉœžœ€Î€¿€á€Î¥Ç¡Œ¥¿·¿¡¥

(3-2) CLOCK hw_timer_get_current(void)

¥¿¥€¥Þ€ÎžœºßÃÍ€òÆÉ€ßœÐ€·¡€ÆâÉôÉœžœ€ÇÊÖ€¹ŽØ¿ô¡¥

(3-3) BOOL hw_timer_fetch_interrupt(void)

¥¿¥€¥Þ³ä¹þ€ßÍ×µá€ò¥Á¥§¥Ã¥¯€¹€ëŽØ¿ô¡¥¥¿¥€¥Þ³ä¹þ€ß€¬Í×µá€µ€ì€Æ€€€ëŸì¹ç€Ë
TRUE¡€Í×µá€µ€ì€Æ€€€Ê€€Ÿì¹ç€ËFALSE€òÊÖ€¹¡¥

(3-4) UINT TO_USEC(CLOCK clock)

¥¿¥€¥ÞÃÍ€ÎÆâÉôÉœžœ€ò¡€1ŠÌÉÃÃ±°Ì€ËÊÑŽ¹€¹€ë€¿€á€Î¥Þ¥¯¥í¡Ê€Þ€¿€ÏŽØ¿ô¡Ë¡¥
hw_timer_get_current€ÇÆÉ€ßœÐ€·€¿ÃÍ€ò¡€¥¿¥€¥Þ³ä¹þ€ßÈ¯Àž€«€é€Î·Ð²á»þŽÖ
¡ÊÃ±°Ì: 1ŠÌÉÃ¡Ë€ËÊÑŽ¹€¹€ë€¿€á€ËÍÑ€€€ë¡¥

(3-5) BOOL BEFORE_IREQ(CLOCK clock)

³ä¹þ€ß€ò¶Ø»ß€·€¿ŸõÂÖ€Ç¡€€Þ€ºhw_timer_get_current€òžÆ€ÓœÐ€·¡€Â³€€€Æ
hw_timer_fetch_interrupt€òžÆ€ÓœÐ€¹Ÿì¹ç€ò¹Í€š€ë¡¥hw_timer_get_current
€òžÆ€ÓœÐ€·€¿ÄŸžå€Ë¥¿¥€¥Þ€¬ŒþŽü€ËÃ£€·¡€¥¿¥€¥Þ³ä¹þ€ß€¬Í×µá€µ€ì€ë€È¡€
hw_timer_get_current€ÏŒþŽü€ËÃ£€¹€ëÄŸÁ°€Î¥¿¥€¥ÞÃÍ¡Ê€³€ì€ò¡€clock€È€¹€ë¡Ë
€òÊÖ€·¡€hw_timer_fetch_interrupt€¬TRUE€òÊÖ€¹€³€È€Ë€Ê€ë¡¥€³€ÎŸõ¶·€Ç€âÀµ
€·€€žœºß»þ¹ï€òÆÀ€ë€¿€á€Ë¡€clock€¬€¢€ë°ìÄêÃÍ°ÊŸå€ÎŸì¹ç€Ë€Ï¡€
hw_timer_fetch_interrupt€¬TRUE€òÊÖ€·€Æ€â¡€³ä¹þ€ßÈ¯ÀžÁ°€ÎÃÍ€È€ß€Ê€¹€³€È
€Ë€¹€ë¡¥BEFORE_IREQ€Ï¡€clock€¬³ä¹þ€ßÈ¯ÀžÁ°€ÎÃÍ€È€ß€Ê€¹€Ù€­Ÿì¹ç€ËTRUE€ò¡€
€œ€Š€Ç€Ê€€Ÿì¹ç€ËFALSE€òÊÖ€¹¥Þ¥¯¥í¡Ê€Þ€¿€ÏŽØ¿ô¡Ë€Ç€¢€ë¡¥

5.3 ¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥ÐÍÑ€Î¥Ç¡Œ¥¿·¿€äŽØ¿ô€Ê€É

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥ÐÍÑ€Î¥Ç¡Œ¥¿·¿
€äŽØ¿ô€Ê€É€ÏŒ¡€ÎÄÌ€ê€Ç€¢€ë¡¥€³€ì€é€ÎÄêµÁ€Ï¡€ÊÌ€Ëµ­œÒ€¬€Ê€€žÂ€ê¡€
hw_serial.h¡Ê€Þ€¿€Ï€œ€³€«€é¥€¥ó¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á¡€É¬Í×€Ê
¥³¥ó¥Õ¥£¥®¥å¥ì¡Œ¥·¥ç¥óŸðÊó€òhw_serial.cfg€Ëµ­œÒ€¹€ë¡¥ŽØ¿ô€ÎŒÂÂÎ€¬É¬Í×
€ÊŸì¹ç€Ë€Ï¡€Å¬ÀÚ€Ê¥Õ¥¡¥€¥ë€òÍÑ°Õ€¹€ë¡¥

¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð€ÎÃæ€Ç¡€¥¿¡Œ¥²¥Ã¥È€Î¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹
€Ë°ÍÂž€¹€ëÉôÊ¬€ò¡€¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹¥É¥é¥€¥Ð€ÈžÆ€Ö¡¥¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€
¥¹¥É¥é¥€¥Ð€Ï¡€€ª€ª€è€œ¡€ITRON¥Ç¥Ð¥€¥¹¥É¥é¥€¥ÐÀß·×¥¬¥€¥É¥é¥€¥ó€ÎPDIC€Ë
ÁêÅö€¹€ë¡¥PDIC€ËÁêÅö€¹€ë¥Õ¥¡¥€¥ë€Ç¡€ÂŸ€Î¥·¥¹¥Æ¥à€Ë€â¶ŠÄÌ€Ë»È€š€ë²ÄÇœÀ­
€¬€¢€ëŸì¹ç€Ë€Ï¡€pdic/simple_sio¥Ç¥£¥ì¥¯¥È¥ê€ËÃÖ€¯¡¥

(1) TNUM_PORT

¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð€¬¥µ¥Ý¡Œ¥È€¹€ë¥·¥ê¥¢¥ë¥Ý¡Œ¥È¿ô€òÄêµÁ€¹€ë
¥Þ¥¯¥í¡¥€³€Î¥Þ¥¯¥í€Ï¡€cpu_config.h€Þ€¿€Ïsys_config.h¡Ê€Þ€¿€Ï€œ€ì€é€«€é
¥€¥ó¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ÇÄêµÁ€¹€ë¡¥

(2) ¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹€Î³ä¹þ€ß¥Ï¥ó¥É¥é€È€œ€ÎÅÐÏ¿

¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹€Î³ä¹þ€ß¥Ï¥ó¥É¥é€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€·¡€€œ€ì€ò
¥«¡Œ¥Í¥ë€ËÅÐÏ¿€¹€ëÀÅÅªAPI€òhw_serial.cfg€ËŽÞ€á€ë¡¥¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹
€Î³ä¹þ¥Ï¥ó¥É¥é€Î¥Ù¥¯¥¿ÈÖ¹æ€Ï¡€hw_serial.h¡Ê€Þ€¿€Ï€œ€³€«€é¥€¥ó¥¯¥ë¡Œ¥É
€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€Ç¥Þ¥¯¥íÄêµÁ€·¡€hw_serial.cfg€«€éhw_serial.h€ò¥€¥ó¥¯¥ë
¡Œ¥É€¹€ëÊýË¡€òÉžœà€È€¹€ë¡¥

(3) void sio_initialize(void)

¥·¥ê¥¢¥ëI/O¥Ç¥Ð¥€¥¹¥É¥é¥€¥Ð€òœéŽü²œ€¹€ë¥ë¡Œ¥Á¥ó¡¥€³€ÎŽØ¿ô€Ï¡€¥·¥ê¥¢¥ë
¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð€Î¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€ÎœéŽü²œ¥ë¡Œ¥Á¥ó€«€éžÆ€ÓœÐ€µ
€ì€ë¡¥

(4) SIOPCB

¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥ÈŽÉÍý¥Ö¥í¥Ã¥¯€Î¥Ç¡Œ¥¿·¿¡Êhw_serial.h€Ë€Ï¡€·¿ÀëžÀ€À€±ŽÞ
€Þ€ì€Æ€€€ì€Ð€è€€¡Ë¡¥

(5) SIO_ERDY_SND€ÈSIO_ERDY_RCV

Á÷¿®²ÄÇœ¥³¡Œ¥ë¥Ð¥Ã¥¯€ÎŒ±ÊÌÈÖ¹æ€òSIO_ERDY_SND€Ë¡€Œõ¿®ÄÌÃÎ¥³¡Œ¥ë¥Ð¥Ã¥¯€Î
Œ±ÊÌÈÖ¹æ€òSIO_ERDY_RCV€Ë¥Þ¥¯¥íÄêµÁ€¹€ë¡¥¥³¡Œ¥ë¥Ð¥Ã¥¯€Î¶Ø»ß¡¿µö²Ä€ò¹Ô€Ê
€Š¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë¡Êsio_ena_cbr€Èsio_dis_cbr¡Ë€ÇÍÑ€€€ë¡¥

(6) ¥Ç¥Ð¥€¥¹¥µ¡Œ¥Ó¥¹¥ë¡Œ¥Á¥ó

°Ê²Œ€Î¥Ç¥Ð¥€¥¹¥µ¡Œ¥Ó¥ë¥ë¡Œ¥Á¥ó€Ï¡€¡ÊŸ¯€Ê€¯€È€â¡Ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€é
€Î³ä¹þ€ß€¬¶Ø»ß€µ€ì€¿ŸõÂÖ€ÇžÆ€ÓœÐ€µ€ì€ë¡¥€Þ€¿¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È¡€Èó¥¿
¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Î€€€º€ì€ÇžÆ€ÓœÐ€µ€ì€ëŸì¹ç€â€¢€ë¡Ê€€€º€ì€ÇžÆ€ÓœÐ€µ€ì€Æ
€âÆ°ºî€¹€ë€è€Š€Ë€·€Ê€±€ì€Ð€Ê€é€Ê€€¡Ë¡¥

(6-1) SIOPCB *sio_opn_por(ID siopid, VP_INT exinf)

siopid€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€ò¥ª¡Œ¥×¥ó€¹€ëŽØ¿ô¡¥exinf€Ï¥·¥ê¥¢¥ë
I/O¥Ý¡Œ¥È€ËÂÐ€¹€ë³ÈÄ¥ŸðÊó€Ç¡€¥³¡Œ¥ë¥Ð¥Ã¥¯€òžÆ€Ö»þ€Ë¥Ý¡Œ¥È€ò¶èÊÌ€¹€ë€¿
€á€ËÅÏ€¹¡¥

(6-2) void sio_cls_por(SIOPCB *siopcb)

siopcb€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€ò¥¯¥í¡Œ¥º€¹€ëŽØ¿ô¡¥

(6-3) BOOL sio_snd_chr(SIOPCB *siopcb, char c)

siopcb€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€Ë¡€c€ÇŒš€µ€ì€ëÊž»ú€òÁ÷¿®€¹€ëŽØ¿ô¡¥
Êž»ú€òÁ÷¿®¥ì¥ž¥¹¥¿€ËÆþ€ì€¿Ÿì¹ç€Ë€ÏTRUE€ò¡€Á°€ËÁ÷¿®€·€¿Êž»ú€ÎÁ÷¿®€¬œª€ï€Ã
€Æ€€€Ê€€€¿€á€Ë¡€Êž»ú€òÁ÷¿®¥ì¥ž¥¹¥¿€ËÆþ€ì€é€ì€Ê€«€Ã€¿Ÿì¹ç€Ë€ÏFALSE€òÊÖ
€¹¡¥

(6-4) INT sio_rcv_chr(SIOPCB *siopcb)

siopcb€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€éÊž»ú€òÆÉ€àŽØ¿ô¡¥Êž»ú€òŒõ¿®€·€Æ
€€€¿Ÿì¹ç¡€ÆÉ€ó€ÀÊž»ú€Î¥³¡Œ¥É€ÏÀµ€ÎÃÍ€È€·€ÆÊÖ€·¡€Êž»ú€òŒõ¿®€·€Æ€€€Ê€€Ÿì
¹ç€Ë€Ï-1€òÊÖ€¹¡¥

(6-5) sio_ena_cbr(SIOPCB *siopcb, UINT cbrtn)

siopcb€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€é€Î¡€cbrtn€Ç»ØÄê€µ€ì€ë¥³¡Œ¥ë¥Ð¥Ã
¥¯€òµö²Ä€¹€ë¡¥cbrtn€Ë€Ï¡€SIO_ERDY_SND€«SIO_ERDY_RCV€ò»ØÄê€Ç€­€ë¡¥

(6-6) sio_dis_cbr(SIOPCB *siopcb, UINT cbrtn)

siopcb€Ç»ØÄê€µ€ì€ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€é€Î¡€cbrtn€Ç»ØÄê€µ€ì€ë¥³¡Œ¥ë¥Ð¥Ã
¥¯€ò¶Ø»ß€¹€ë¡¥cbrtn€Ë€Ï¡€SIO_ERDY_SND€«SIO_ERDY_RCV€ò»ØÄê€Ç€­€ë¡¥

(7) ¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€Ï¡€É¬Í×€Ê¥¿¥€¥ß¥ó¥°€Ç¡€¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð
€Î¥¿¡Œ¥²¥Ã¥ÈÈó°ÍÂžÉô€ËŽÞ€Þ€ì€ë°Ê²Œ€Î¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó€òžÆ€ÓœÐ€Ó€À€µ
€Ê€±€ì€Ð€Ê€é€Ê€€¡¥€¿€À€·¡€€œ€ì€Ÿ€ì€Î¥³¡Œ¥ë¥Ð¥Ã¥¯€¬¶Ø»ß€µ€ì€Æ€€€ë»þ€Ï¡€
¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó€òžÆ€ÓœÐ€·€Æ€Ï€Ê€é€Ê€€¡¥

¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó€Ï¡€¡ÊŸ¯€Ê€¯€È€â¡Ë¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€é€Î³ä¹þ€ß€¬
¶Ø»ß€µ€ì€¿ŸõÂÖ€Ç¡€Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ÇžÆ€ÓœÐ€¹¡¥exinf€Ë€Ï¡€¥·¥ê¥¢¥ë
I/O¥Ý¡Œ¥È€Î¥ª¡Œ¥×¥ó»þ€Ë»ØÄê€µ€ì€¿³ÈÄ¥ŸðÊó€òÅÏ€¹¡¥

(7-1) void sio_ierdy_snd(VP_INT exinf)

Á÷¿®²ÄÇœ¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó¡¥¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€ËÂÐ€·€ÆÊž»ú€¬Á÷¿®€Ç€­
€ëŸõÂÖ€Ë€Ê€Ã€¿Ÿì¹ç€ËžÆ€ÓœÐ€¹¡¥¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð€Ï¡€€³€Î¥³
¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó€ÎÃæ€Ç¡€sio_snd_chr€òžÆ€ÓœÐ€·€ÆŒ¡€ÎÊž»ú€òÁ÷¿®€¹€ë€«¡€
Á÷¿®€¹€Ù€­Êž»ú€¬€Ê€€Ÿì¹ç€Ë€ÏÁ÷¿®²ÄÇœ¥³¡Œ¥ë¥Ð¥Ã¥¯€ò¶Ø»ß€¹€ë¡¥

(7-2) void sio_ierdy_rcv(VP_INT exinf)

Œõ¿®ÄÌÃÎ¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó¡¥¥·¥ê¥¢¥ëI/O¥Ý¡Œ¥È€«€éÊž»ú€òŒõ¿®€·€¿Ÿì¹ç
€ËžÆ€ÓœÐ€¹¡¥¥·¥ê¥¢¥ë¥€¥ó¥¿¥Õ¥§¡Œ¥¹¥É¥é¥€¥Ð€Ï¡€€³€Î¥³¡Œ¥ë¥Ð¥Ã¥¯¥ë¡Œ¥Á¥ó
€ÎÃæ€Ç¡€É¬€ºsio_rcv_chr€òžÆ€ÓœÐ€·€ÆŒõ¿®€·€¿Êž»ú€òŒè€êœÐ€¹¡¥

5.4 ¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯ÍÑ€Î€¿€á€ÎÄêµÁ

¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€Ù€­¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€Î€¿€á€ÎÄêµÁ€ÏŒ¡€ÎÄÌ€ê€Ç
€¢€ë¡¥€³€ì€é€ÎÄêµÁ€Ï¡€cpu_config.h€Þ€¿€Ïsys_config.h¡Ê€Þ€¿€Ï€œ€ì€é€«€é
¥€¥ó¥¯¥ë¡Œ¥É€µ€ì€ë¥Õ¥¡¥€¥ë¡Ë€ËŽÞ€á€ë¡¥

(1) LOGTASK_PORTID

¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€¬¡€¥·¥¹¥Æ¥à¥í¥°€òœÐÎÏ€¹€ë¥·¥ê¥¢¥ë¥Ý¡Œ¥È€ÎID€òÄêµÁ€·
€¿¥Þ¥¯¥í€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥

(2) ¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯ŽØÏ¢€ÎÄêµÁ¡Ê¥ª¥×¥·¥ç¥ó¡Ë

¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€ËŽØ€¹€ë°Ê²Œ€Î¥Þ¥¯¥í€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄó¶¡€¹€ë¡¥€³
€ì€é€Î¥Þ¥¯¥í€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ÇÄêµÁ€·€Ê€€Ÿì¹ç€Ë€Ï¡€¥Ç¥Õ¥©¥ë¥È€ÎÃÍ€¬»È
€ï€ì€ë¡¥

(2-1) LOGTASK_PRIORITY          ¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€ÎœéŽüÍ¥ÀèÅÙ
(2-2) LOGTASK_STACK_SIZE        ¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€Î¥¹¥¿¥Ã¥¯¥µ¥€¥º
(2-3) LOGTASK_INTERVAL          ¥·¥¹¥Æ¥à¥í¥°¥¿¥¹¥¯€ÎÆ°ºîŽÖ³Ö¡ÊÃ±°Ì: ¥ß¥êÉÃ¡Ë


£¶¡¥¥¿¡Œ¥²¥Ã¥È°ÍÂžÉôŒÂÁõŸå€Î¥Ò¥ó¥È

(1) ¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€Î2ÄÌ€ê€ÎŒÂÁõÊý¿Ë

¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€ÎŒÂÁõÊý¿Ë€È€·€Æ¡€¥³¥ó¥Æ¥­¥¹¥È€ÎÊÝÂž¡ŠÉüµ¢€È¥¿¥¹¥¯
Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò°ìÏ¢€Î¥ë¡Œ¥Á¥ó€Ç¹Ô€ŠÊý¿Ë¡Ê€³€ì€òÊý¿ËA€ÈžÆ€Ö¡Ë
€È¡€¥³¥ó¥Æ¥­¥¹¥È€ÎÊÝÂž¡ŠŒÂ¹Ô€¹€ë¥¿¥¹¥¯€ÎÁªÂò¡Š¥³¥ó¥Æ¥­¥¹¥È€ÎÉüµ¢€È¥¿¥¹
¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò€Ð€é€Ð€é€Î¥ë¡Œ¥Á¥ó€Ç¹Ô€ŠÊý¿Ë¡Ê€³€ì€òÊý¿ËB€È
žÆ€Ö¡Ë€¬€¢€ë¡¥Êý¿ËB€Ï¡€ÊÝÂž€¹€ë¥³¥ó¥Æ¥­¥¹¥ÈŸðÊó€òŸõ¶·€Ë±þ€ž€ÆÉ¬Í×ºÇŸ¯
žÂ€Ë€¹€ë€³€È€¬ÍÆ°×€Ë€Ê€ë€È€€€ŠÍøÅÀ€¬€¢€ë¡¥€¿€À€·¡€¥·¥ß¥å¥ì¡Œ¥·¥ç¥óŽÄ¶­
€ÎŸì¹ç¡€ŒÂžœÊýË¡€Ë€è€Ã€Æ€ÏÊý¿ËB€¬ºÎ€ì€Ê€€²ÄÇœÀ­€â¹Í€š€é€ì€ë¡¥

¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°²Õœê€È€€€ŠŽÑÅÀ€«€é€ß€¿Ÿì¹ç¡€2€Ä€ÎÊý¿Ë€Ë€Ï
Î±°Õ€¹€Ù€­°ã€€€¬€¢€ë¡¥°Ê²Œ¡€Îã€Ë€è€êÀâÌÀ€¹€ë¡¥¥¿¥¹¥¯1€È¥¿¥¹¥¯2€Î2€Ä€Î
¥¿¥¹¥¯€¬€¢€ê¡€¥¿¥¹¥¯1€ÎÊý€¬Í¥ÀèÅÙ€¬¹â€€€â€Î€È€¹€ë¡¥ºÇœé¡€¥¿¥¹¥¯2€¬ŒÂ¹Ô
Ãæ€Ë³ä¹þ€ß¥Ï¥ó¥É¥é€¬µ¯Æ°€µ€ì¡€€œ€ÎÃæ€«€é¥¿¥¹¥¯1€¬µ¯Æ°€µ€ì€¿·ë²Ì¡€¥¿¥¹
¥¯2€¬¥¿¥¹¥¯1€Ë€è€Ã€Æ¥×¥ê¥š¥ó¥×¥È€µ€ì€¿€â€Î€È€¹€ë¡¥€³€³€Ç¡€¥¿¥¹¥¯1€¬¥¿
¥¹¥¯2€ËÂÐ€·€Æ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€òÍ×µá€·€¿žå¡€ÂÔ€ÁŸõÂÖ€ËÆþ€ë
¥µ¡Œ¥Ó¥¹¥³¡Œ¥ë€òÈ¯¹Ô€·¡€€œ€Î·ë²Ì¥¿¥¹¥¯2€Ë¥Ç¥£¥¹¥Ñ¥Ã¥Á€µ€ì€ëŸõ¶·€ò¹Í€š
€ë¡¥€³€Î»þ¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€Ï¡€¥¿¥¹¥¯2€ËÂÐ€·€Æ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ
¥Á¥ó€Îµ¯Æ°œèÍý€ò¹Ô€ŠÉ¬Í×€¬€¢€ë€¬¡€ÊýŒ°A€ÎŸì¹ç€Ë€Ï¡€¥¿¥¹¥¯1€«€éÌÀŒšÅª€Ë
žÆ€Ð€ì€¿¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€ÎÃæ€Ç¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€¬¹Ô€ï€ì€ë€Î€Ë
ÂÐ€·€Æ¡€Êý¿ËB€ÎŸì¹ç€Ë€Ï¡€¥¿¥¹¥¯2€Î¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢€¹€ë¥ë¡Œ¥Á¥ó€ØÊ¬Žô
€·€¿žå¡€¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢€¹€ëœèÍý€ËÂ³€¯œèÍý€È€·€Æ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á
¥ó€Îµ¯Æ°€¬¹Ô€ï€ì€ë¡¥

JSP¥«¡Œ¥Í¥ë€Ç€Ï¡€Êý¿ËA€òºÎ€ë€«Êý¿ËB€òºÎ€ë€«€ò¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€ËÇ€€»€ë
€³€È€È€¹€ë¡¥€œ€Î€¿€á€Ë¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã
¥Á¥ã€ËŽÞ€á€ë»ÅÍÍ€È€·€Æ€€€ë¡¥

(2) ³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý

³ä¹þ€ß¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý€ÎÆâÍÆ€Ï¡€¥×¥í¥»¥Ã¥µ€Î³ä¹þ€ß¥¢¡Œ¥­¥Æ¥¯¥Á¥ã€Ë
€è€êÂç€­€¯°Û€Ê€ë€¬¡€€ª€ª€è€œ€ÎœèÍý€ÎÎ®€ì€ÏŒ¡€ÎÄÌ€ê€Ç€¢€ë¡¥CPUÎã³°¥Ï¥ó
¥É¥é€ÎœÐÆþžýœèÍý€â¡€°ú¿ô€òÅÏ€¹€³€È€òœü€€€Æ€Ï¡€€ª€ª€è€œ€ÎœèÍý€ÎÎ®€ì€ÏÆ±
ÍÍ€Ç€¢€ë¡¥€¿€À€·¡€¥×¥í¥»¥Ã¥µ€¬³ä¹þ€ß€ÈCPUÎã³°€Ç°Û€Ê€ë°·€€€ò€¹€ëŸì¹ç€Ï¡€
ŒÂºÝ€ÎœÐÆþžýœèÍý€Ï€«€Ê€ê°Û€Ê€Ã€¿€â€Î€È€Ê€ë¡¥

        ------------------------------------------------------------
        ¥ì¥ž¥¹¥¿€ÎÊÝÂž¡ÊŒç€Ë¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿¡Ë
        ³ä¹þ€ß¥¹¥¿¥Ã¥¯€ØÀÚŽ¹€š¡ÊºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é€Î€ß¡Ë

        ÅÐÏ¿€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥é€ÎžÆœÐ€·

        ¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€ØÀÚŽ¹€š¡ÊºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é€Î€ß¡Ë
        if (ºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é && reqflg) {
                if (enadsp && runtsk != schedtsk) {
                        ¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥ÁœèÍý
                        ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý¡Êcalltex¡Ë
                }
                else  {
                        ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý¡Êcalltex¡Ë
                }
        }
        ¥ì¥ž¥¹¥¿€ÎÉüµ¢¡ÊŒç€Ë¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿¡Ë
        ³ä¹þ€ßœèÍý€«€é€Î¥ê¥¿¡Œ¥ó

        ¢š¡Ö¥Ï¥ó¥É¥é¡×€Ï¡€³ä¹þ€ß¥Ï¥ó¥É¥é€ÈCPUÎã³°¥Ï¥ó¥É¥é€ÎÁíŸÎ¡¥
        ¢š¡ÖºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é¡×€Ï¡ÖÌá€êÀè€¬¥¿¥¹¥¯¡×€ÈžÀ€€Ž¹€š€ë€³€È€¬
           €Ç€­€ë¡¥
        ------------------------------------------------------------

€³€ÎÃæ€Ç¡€ÆâÂŠ€ÎifÊž€¬€€€º€ì€ÎŸì¹ç€Ç€â¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý
€ò¹Ô€ŠÉ¬Í×€¬€¢€ë€³€È€«€é¡Ê€¿€À€·¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°€ò¹Ô€ŠÂÐ
ŸÝ¥¿¥¹¥¯€Ï°Û€Ê€ë¡Ë¡€ÆâÂŠ€ÎifÊž€ÏŒ¡€Î€è€Š€ËºÇÅ¬²œ€Ç€­€ëŸì¹ç€¬€¢€ë¡¥

        ------------------------------------------------------------
                if (enadsp && runtsk != schedtsk) {
                        ¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥ÁœèÍý
                }
                ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý¡Êcalltex¡Ë
        ------------------------------------------------------------


£·¡¥M68K¡Ê68LC040¡ËÍÑ€Î¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô

(1) Á°Äó

€¹€Ù€Æ€Î¥¿¥¹¥¯€ò¥¹¡Œ¥Ñ¡Œ¥Ð¥€¥¶¥â¡Œ¥É€ÇŒÂ¹Ô€¹€ë€³€È€È€·¡€¥æ¡Œ¥¶¥â¡Œ¥É€Ï
ÍÑ€€€Ê€€¡¥

(2) ŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È€ÈCPU¥í¥Ã¥¯ŸõÂÖ

¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ï¥Þ¥¹¥¿¥â¡Œ¥É¡€Èó¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ï³ä¹þ€ß¥â¡Œ¥É€Ç
ŒÂ¹Ô€¹€ë¡¥sense_context €Ï¡€SR Ãæ€Î¥Þ¥¹¥¿¡¿³ä¹þ€ß¥â¡Œ¥É¥Ó¥Ã¥È€ò»²ŸÈ€¹
€ëÊýË¡€ÇŒÂžœ€¹€ë¡¥

IPM €¬ 7 €Î»þ¡ÊNMI €òœü€¯€¹€Ù€Æ€Î³ä¹þ€ß€¬¶Ø»ß€µ€ì€ë¡Ë€«€Ä€œ€Î»þ€ËžÂ€ê¡€ 
CPU¥í¥Ã¥¯ŸõÂÖ€Ç€¢€ë€â€Î€È€¹€ë¡¥sense_lock €Ï¡€SR Ãæ€Î IPM €ò»²ŸÈ€¹€ëÊý
Ë¡€ÇŒÂžœ€¹€ë¡¥NMI €Ï¥«¡Œ¥Í¥ë€ÎŽÉÍý³°€Î³ä¹þ€ß€Ê€Î€Ç¡€CPU¥í¥Ã¥¯ŸõÂÖ€Ç 
NMI €¬Œõ€±ÉÕ€±€é€ì€ë€Î€Ïº¹€·»Ù€š€Ê€€¡¥

chg_ipm €ò¥µ¥Ý¡Œ¥È€¹€ë€«€É€Š€«€ò¡€SUPPORT_CHG_IPM €òÄêµÁ€¹€ë€«€É€Š€«€Ç
ÊÑ¹¹€Ç€­€ë¡¥¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ç IPM €òÊÑ¹¹€¹€ëŸì¹ç€Ë€Ï¡€chg_ipm €ò»È
€ï€Ê€±€ì€Ð€Ê€é€Ê€€¡¥chg_ipm €ò¥µ¥Ý¡Œ¥È€·€Ê€€Ÿì¹ç€Ë€Ï¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹
¥È€Ç IPM €òÊÑ¹¹€¹€ë€³€È€Ï€Ç€­€Ê€€¡¥€Ä€Þ€ê¡€¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ç€Ï¡€IPM 
€ÏŸï€Ë 0 €Ë€Ê€Ã€Æ€€€ë¡¥

chg_ipm €ò¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç€Ç€â¡€chg_ipm €ò»È€Ã€Æ IPM €ò 7 €ËÊÑ¹¹€¹€ë€³
€È€Ïµö€µ€Ê€€¡¥€³€ì€Ï¡€chg_ipm €È loc_cpu¡¿unl_cpu €ÎŽØ·ž€¬Ê£»š€Ë€Ê€ë€¿
€á€Ç€¢€ë¡¥€Þ€¿¡€IPM €¬ 1¡Á6 €Î»þ€Ë€â¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€ÏÊÝÎ±€µ€ì€Ê€€¡¥ 
IPM €Ï¡€¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€Ë€è€Ã€Æ¡€¿·€·€¯ŒÂ¹ÔŸõÂÖ€Ë€Ê€Ã€¿¥¿¥¹¥¯€Ø°ú€­
·Ñ€¬€ì€ë¡¥€œ€Î€¿€á¡€¥¿¥¹¥¯€¬ŒÂ¹ÔÃæ€Ë¡€ÊÌ€Î¥¿¥¹¥¯€Ë€è€Ã€Æ IPM €¬ÊÑ¹¹€µ
€ì€ëŸì¹ç€¬€¢€ë¡¥€³€ì€Ï¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã€òÊý¿ËB€ÇŒÂÁõ€¹€ëŸì¹ç€Ë€ÏÁÇÄŸ€Ë
ŒÂÁõ€Ç€­€ë€¬¡€Êý¿ËA€ÇŒÂÁõ€¹€ëŸì¹ç€Ë€Ï€¢€Á€³€Á€Ë IPM €ÎÀßÄêœèÍý€¬Æþ€ë¡¥
Êý¿ËA€ÇŒÂÁõ€¹€ëŸì¹ç€Ë€Ï¡€IPM €¬ 1¡Á6 €Î»þ€Ë€â¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€ÏÊÝÎ±
€µ€ì€ë€È€¹€ëÊý€¬³Ú€Ç€¢€ë¡¥

(3) ³ä¹þ€ß¥Ï¥ó¥É¥éœÐÆþžýœèÍý

M68K¡ÊM68020°ÊŸå¡Ë€Ç€Ï¡€³ä¹þ€ß¥Ï¥ó¥É¥é€Îµ¯Æ°€Ë€è€Ã€Æ¡€»ÈÍÑ€¹€ë¥¹¥¿¥Ã¥¯
€¬Œ«Æ°Åª€Ë³ä¹þ€ß¥¹¥¿¥Ã¥¯€ØÀÚ€êŽ¹€ï€ë€¿€á¡€³ä¹þ€ß¥¹¥¿¥Ã¥¯€Ø€ÎÀÚŽ¹€šœèÍý
€ÏÉ¬Í×€Ê€€¡¥ºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é€Ç€¢€ë€«€É€Š€«€Ï¡€¥¹¥¿¥Ã¥¯Ÿå€ËÀÑ€Þ€ì€¿ 
SR Ãæ€Î¥Þ¥¹¥¿¡¿³ä¹þ€ß¥â¡Œ¥É¥Ó¥Ã¥È€ò»²ŸÈ€·€ÆÈœÄê€·€Æ€€€ë¡¥¥¿¥¹¥¯¥Ç¥£¥¹
¥Ñ¥Ã¥Á€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€Ï¡€ret_int ¥ë¡Œ¥Á¥ó€ËÇ€€»€Æ€€
€ë¡¥

reqflg €ò¥Á¥§¥Ã¥¯€¹€ëÁ°€Ë³ä¹þ€ß€ò¶Ø»ß€¹€ë€Î€Ï¡€³ä¹þ€ß€ò¶Ø»ß€·€Ê€€€È¡€ 
reqflg €ò¥Á¥§¥Ã¥¯€·€¿žå€Ëµ¯Æ°€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥éÆâ€Ç¥Ç¥£¥¹¥Ñ¥Ã¥Á€¬Í×
µá€µ€ì€¿Ÿì¹ç€Ë¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á€¬¹Ô€ï€ì€Ê€€€¿€á€Ç€¢€ë¡¥

interrupt_entry:
        movem.l %d0-%d1/%a0-%a1, -(%sp) /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÊÝÂž */
        jsr <³ä¹þ€ß¥Ï¥ó¥É¥é>            /* ³ä¹þ€ß¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹ */
        movem.l (%sp)+, %d0-%d1/%a0-%a1 /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÉüµ¢ */
        btst.b #4, (%sp)                /* Ìá€êÀè€¬³ä¹þ€ß¥â¡Œ¥É€Ê€é */
        jbeq 1f                         /*           €¹€°€Ë¥ê¥¿¡Œ¥ó */
        ori.w #0x0700, %sr              /* ³ä¹þ€ß¶Ø»ß */
        tst.l reqflg                    /* reqflg €¬ TRUE €Ç€¢€ì€Ð */
        jbne ret_int                    /*              ret_int €Ø */
1:      rte

(4) CPUÎã³°¥Ï¥ó¥É¥éœÐÆþžýœèÍý

M68K€Ç€Ï¡€CPUÎã³°¥Ï¥ó¥É¥é€Îµ¯Æ°€Ë€è€Ã€Æ³ä¹þ€ß¥â¡Œ¥É€Ø€Î°Ü¹Ô€Ï€ª€³€é€º¡€
»ÈÍÑ€¹€ë¥¹¥¿¥Ã¥¯€ÏÀÚ€êŽ¹€ï€é€Ê€€¡¥€œ€Î€¿€á¡€CPUÎã³°¥Ï¥ó¥É¥éÆâ€Ç³ä¹þ€ß
¥â¡Œ¥É€ËÀÚ€êŽ¹€š€Æ€€€ë¡¥€Þ€¿¡€ºÇ€â³°ÂŠ€Î¥Ï¥ó¥É¥é€Ç€¢€ë€«€É€Š€«€òÈœÄê€¹
€ë€¿€á€Ë¡€³ä¹þ€ß¥â¡Œ¥É€ËÀÚ€êŽ¹€š€ëÁ°€Î SR €ò¥¹¥¿¥Ã¥¯Ÿå€ËÊÝÂž€¹€ë¡¥¥¿¥¹
¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€È¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°œèÍý€Ï¡€ret_exc ¥ë¡Œ¥Á¥ó€Ë
Ç€€»€Æ€€€ë¡¥

CPUÎã³°¥Ï¥ó¥É¥é€Ø€Î°ú¿ô€Ï¡€Îã³°¥¹¥¿¥Ã¥¯¥Õ¥ì¡Œ¥à€ÎÀèÆ¬ÈÖÃÏ¡Ê€¹€Ê€ï€Á¡€ 
CPUÎã³°¥Ï¥ó¥É¥é€ÎœÐÆþžýœèÍý€¬žÆ€Ð€ì€¿ÄŸžå€Î¥¹¥¿¥Ã¥¯¥Ý¥€¥ó¥¿¡Ë€È€·€Æ€€
€ë¡¥

reqflg €ò¥Á¥§¥Ã¥¯€¹€ëÁ°€Ë³ä¹þ€ß€ò¶Ø»ß€¹€ë€Î€Ï¡€³ä¹þ€ß€ò¶Ø»ß€·€Ê€€€È¡€ 
reqflg €ò¥Á¥§¥Ã¥¯€·€¿žå€Ëµ¯Æ°€µ€ì€¿³ä¹þ€ß¥Ï¥ó¥É¥éÆâ€Ç¥Ç¥£¥¹¥Ñ¥Ã¥Á€¬Í×
µá€µ€ì€¿Ÿì¹ç€Ë¡€¥Ç¥£¥¹¥Ñ¥Ã¥Á€¬¹Ô€ï€ì€Ê€€€¿€á€Ç€¢€ë¡¥

exception_entry:
        movem.l %d0-%d1/%a0-%a1, -(%sp) /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÊÝÂž */
        lea.l 16(%sp), %a0              /* Îã³°¥Õ¥ì¡Œ¥à€ÎÀèÆ¬€ò A0 €Ë */
        move.w %sr, %d0                 /* SR €ò D0 €Ë */
        and.w #~0x1000, %sr             /* ³ä¹þ€ß¥â¡Œ¥É */
        move.l %d0, -(%sp)              /* žµ€Î SR €ò¥¹¥¿¥Ã¥¯€ËÊÝÂž */
        move.l %a0, -(%sp)              /* A0 €ò°ú¿ô€È€·€ÆÅÏ€¹ */
        jsr <CPUÎã³°¥Ï¥ó¥É¥é>           /* CPUÎã³°¥Ï¥ó¥É¥é€òžÆ€ÓœÐ€¹ */
        addq.l #4, %sp                  /* °ú¿ô€òŒÎ€Æ€ë */
        move.l (%sp)+, %d0
        and.w #0x1000, %d0              /* žµ€¬³ä¹þ€ß¥â¡Œ¥É€Ê€é */
        jbeq 1f                         /*       €¹€°€Ë¥ê¥¿¡Œ¥ó */
        or.w #0x1700, %sr               /* ¥Þ¥¹¥¿¥â¡Œ¥É¡Š³ä¹þ€ß¶Ø»ß */
        tst.l reqflg                    /* reqflg €¬ TRUE €Ç€¢€ì€Ð */
        jbne ret_exc                    /*              ret_exc €Ø */
1:      movem.l (%sp)+, %d0-%d1/%a0-%a1 /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÉüµ¢ */
        rte

(5) Êý¿ËA€Î¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ã

°Ê²Œ€Î¥³¡Œ¥É€Ç€Ï¡€chg_ipm €Ï¥µ¥Ý¡Œ¥È€·€Æ€€€Ê€€¡¥€Þ€¿¡€ºÎÍÑ€·€Ê€«€Ã€¿¥³
¡Œ¥È€Ç€¢€ë€¿€á¡€Æ°ºî¥Æ¥¹¥È€ò€·€Æ€€€Ê€€¡¥

CTXB €Ï¡ÖVP msp¡×€Î€ß€òŽÞ€à¹œÂ€ÂÎ€È€¹€ë¡¥¥¿¥¹¥¯€Î¥³¥ó¥Æ¥­¥¹¥È€Ï¡€Œ¡€Î
¿Þ€Î€è€Š€Ë¥¿¥¹¥¯€Î¥¹¥¿¥Ã¥¯Ÿå€ËÊÝÂž€¹€ë¡¥¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿¡ÊD0¡ÁD1¡€A0
¡ÁA1¡Ë€È€œ€ÎÂŸ€Î¥ì¥ž¥¹¥¿€òÊÌ¡¹€ËÀÑ€à€Î€Ï¡€¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ°
€ËÅÔ¹ç€¬€è€€€¿€á€Ç€¢€ë¡¥

 *  Ÿ®  +-----------------------------------+ ¢« TCB Ãæ€ËÊÝÂž€µ€ì€Æ€€€ë MSP
 *  ¢¬  |                D2                 |
 *      +-----------------------------------+
 *                  . . . . . .
 *      +-----------------------------------+
 *      |                D7                 |
 *      +-----------------------------------+
 *      |                A2                 |
 *      +-----------------------------------+
 *                  . . . . . .
 *      +-----------------------------------+
 *      |                A6                 |
 *      +-----------------------------------+
 *      |                D0                 |
 *      +-----------------------------------+
 *      |                D1                 |
 *      +-----------------------------------+
 *      |                A0                 |
 *      +-----------------------------------+
 *      |                A1                 |
 *      +-----------------+-----------------+
 *      |        SR       |   PC (Ÿå16bit)  |
 *      +-----------------+-----------------+
 *  ¢­  |   PC (²Œ16bit)  |    Îã³°ŸðÊó     |
 *  Âç  +-----------------+-----------------+ ¢« ¥Ç¥£¥¹¥Ñ¥Ã¥Á¥ãµ¯Æ°Á°€Î MSP

dispatch €Ï¡€trap_dispatch €ò TRAPÌ¿Îá€ÇžÆ€ÖŽØ¿ô€È€¹€ë¡¥

exit_and_dispatch:
        or.w #0x1000, %sr               /* ¥Þ¥¹¥¿¥â¡Œ¥É */
        jbra dispatch_1

trap_dispatch:
        movem.l %d0-%d1/%a0-%a1, -(%sp) /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÊÝÂž */
        movem.l %d2-%d7/%a2-%a6, -(%sp) /* »Ä€ê€Î¥ì¥ž¥¹¥¿€òÊÝÂž */
        move.l runtsk, %a0              /* ¥³¥ó¥Æ¥­¥¹¥È€òÊÝÂž */
        move.l %sp, TCB_msp(%a0)
dispatch_1:
        move.l schedtsk, %a0
        move.l %a0, runtsk              /* schedtsk €ò runtsk €Ë */
        jbeq dispatch_3                 /* schedtsk €¬€¢€ë€«¡© */
        move.l TCB_msp(%a0), %sp        /* ¥³¥ó¥Æ¥­¥¹¥È€òÉüµ¢ */
        movem.l (%sp)+, %d2-%d7/%a2-%a6 /* ¥ì¥ž¥¹¥¿€òÉüµ¢ */
        btst.b #TCB_enatex_bit, TCB_enatex(%a0)
        jbeq dispatch_2                 /* enatex €¬ FALSE €Ê€é¥ê¥¿¡Œ¥ó */
        tst.l TCB_texptn(%a0)           /* texptn €¬ 0 €Ê€é¥ê¥¿¡Œ¥ó */
        jbeq dispatch_2
        jsr call_texrtn                 /* ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€ÎžÆœÐ€· */
dispatch_2:
        movem.l (%sp)+, %d0-%d1/%a0-%a1 /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÉüµ¢ */
        rte

dispatch_3:
        stop #0x2000                    /* ³ä¹þ€ßÂÔ€Á¡Ê³ä¹þ€ß¥â¡Œ¥É¡Ë */
        /*
         *  €³€³€Ç³ä¹þ€ß¥â¡Œ¥É€ËÀÚ€êŽ¹€š€ë€Î€Ï¡€€³€³€ÇÈ¯Àž€¹€ë³ä¹þ€ßœèÍý
         *  €Ë€É€Î¥¹¥¿¥Ã¥¯€ò»È€Š€«€È€€€ŠÌäÂê€Î²ò·è€È¡€³ä¹þ€ß¥Ï¥ó¥É¥éÆâ€Ç
         *  €Î¥¿¥¹¥¯¥Ç¥£¥¹¥Ñ¥Ã¥Á€ÎËÉ»ß€È€€€Š2€Ä€Î°ÕÌ£€¬€¢€ë¡¥
         */
        or.w #0x1700, %sr               /* ¥Þ¥¹¥¿¥â¡Œ¥É¡Š³ä¹þ€ß¶Ø»ß */
        tst.l reqflg                    /* reqflg €¬ FALSE €Ê€é */
        jbeq dispatch_3                 /*        dispatch_3 €Ø */
        clr.l reqflg                    /* reqflg €ò¥¯¥ê¥¢ */
        jbra dispatch_1

ret_int:
        /*
         *  €³€³€Ç€Ï¡€³ä¹þ€ß¥â¡Œ¥É¡Š³ä¹þ€ß¶Ø»ßŸõÂÖ¡¥
         */
        move.l %a1, -(%sp)              /* A1 €ò³ä¹þ€ß¥¹¥¿¥Ã¥¯€ËÊÝÂž */
        movec.l %msp, %a1               /* ¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€ò A1 €Ë */
        move.l (%sp)+, -(%a1)           /* A1 €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€ËÀÑ€à */
        movem.l %d0-%d1/%a0, -(%a1)     /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÀÑ€à */
        clr.l reqflg                    /* reqflg €ò¥¯¥ê¥¢ */
        move.l runtsk, %a0              /* A0 ¢« runtsk */
        tst.l enadsp                    /* enadsp €¬ FALSE €Ê€é */
        jbeq ret_int_3                  /*         ret_int_3 €Ø */
        cmp.l schedtsk, %a0             /* runtsk €È schedtsk €¬Æ±€ž€Ê€é */
        jbeq ret_int_3                  /*                  ret_int_3 €Ø */

        /* ¥Ç¥£¥¹¥Ñ¥Ã¥ÁœèÍý */
        movem.l %d2-%d7/%a2-%a6, -(%a1) /* ¥ì¥ž¥¹¥¿€òÊÝÂž */
        move.l %a1, TCB_msp(%a0)        /* ¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€òÊÝÂž */
ret_int_1:
        move.l schedtsk, %a0
        move.l %a0, runtsk              /* schedtsk €ò runtsk €Ë */
        jbne ret_int_2                  /* schedtsk €¬€¢€ë€«¡© */
ret_int_1x:
        stop #0x2000                    /* ³ä¹þ€ßÂÔ€Á¡Ê³ä¹þ€ß¥Ï¥ó¥É¥éÆâ¡Ë */
        or.w #0x0700, %sr               /* ³ä¹þ€ß¶Ø»ß */
        tst.l reqflg                    /* reqflg €¬ FALSE €Ê€é */
        jbeq ret_int_1x                 /*        ret_int_1x €Ø */
        clr.l reqflg                    /* reqflg €ò¥¯¥ê¥¢ */
        jbra ret_int_1
ret_int_2:
        move.l TCB_msp(%a0), %a1        /* ¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€ò A1 €Ë */
        movem.l (%a1)+, %d2-%d7/%a2-%a6 /* ¥ì¥ž¥¹¥¿€òÉüµ¢ */

ret_int_3:
        btst.b #TCB_enatex_bit, TCB_enatex(%a0)
        jbeq ret_int_4                  /* enatex €¬ FALSE €Ê€é¥ê¥¿¡Œ¥ó */
        tst.l TCB_texptn(%a0)           /* texptn €¬ 0 €Ç€Ê€±€ì€Ð */
        jbne ret_int_5                  /*           ret_int_5 €Ø */
ret_int_4
        movem.l (%a1)+, %d0-%d1/%a0     /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÉüµ¢ */
        move.l (%a1)+, -(%sp)           /* A1 €ò³ä¹þ€ß¥¹¥¿¥Ã¥¯€ËÊÝÂž */
        movec.l %a1, %msp               /* A1 €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€Ë */
        move.l (%sp)+, %a1              /* A1 €ò³ä¹þ€ß¥¹¥¿¥Ã¥¯€«€éÉüµ¢ */
        rte

ret_int_5:
        move.w 16(%a1), %d0             /* Ìá€êÀè€Î SR €ò D0 €Ë */
        move.l TCB_exinf(%a0), -(%a1)   /* exinf €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€Ë */
        move.l TCB_texptn(%a0), -(%a1)  /* texptn €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€Ë */
        move.l #ret_tex, -(%a1)         /* #ret_tex €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€Ë */
        clr.l TCB_enatex(%a0)           /* runtsk->enatex €ò¥¯¥ê¥¢ */
        clr.l TCB_texptn(%a0)           /* runtsk->texptn €ò¥¯¥ê¥¢ */
        move.w #Îã³°ŸðÊó, -(%a1)        /* Îã³°¥¹¥¿¥Ã¥¯¥Õ¥ì¡Œ¥à€òºî€ë */
        move.l TCB_texrtn(%a0), -(%a1)
        move.w %d0, -(%a1)
        movec.l %a1, %msp               /* A1 €ò¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€Ë */
        rte

¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥óžÆœÐ€·»þ€Î¥¹¥¿¥Ã¥¯

 *  Ÿ®  +-----------------------------------+
 *  ¢¬  |             ret_tex               |
 *      +-----------------------------------+
 *      |              texptn               |
 *      +-----------------------------------+
 *      |              exinf                |
 *      +-----------------------------------+
 *      |                D0                 |
 *      +-----------------------------------+
 *      |                D1                 |
 *      +-----------------------------------+
 *      |                A0                 |
 *      +-----------------------------------+
 *      |                A1                 |
 *      +-----------------+-----------------+
 *      |        SR       |   PC (Ÿå16bit)  |
 *      +-----------------+-----------------+
 *  ¢­  |   PC (²Œ16bit)  |    Îã³°ŸðÊó     |
 *  Âç  +-----------------+-----------------+

ret_tex:
        addq.l #8, %sp                  /* °ú¿ô¥š¥ê¥¢€òŒÎ€Æ€ë */
        or.w #0x0700, %sr               /* ³ä¹þ€ß¶Ø»ß */
        jsr call_texrtn                 /* ¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Îµ¯Æ° */
        movem.l (%sp)+, %d0-%d1/%a0-%a1 /* ¥¹¥¯¥é¥Ã¥Á¥ì¥ž¥¹¥¿€òÉüµ¢ */
        rte

(6) Êý¿ËB¡ÊºÎÍÑ¡Ë

¥œ¡Œ¥¹¥³¡Œ¥É€ò»²ŸÈ¡¥


£ž¡¥¥¿¡Œ¥²¥Ã¥È°ÍÂžÉôŒÂÁõŸå€ÎÃí°ÕÅÀ

°Ê²Œ€Ï¡€¥¿¡Œ¥²¥Ã¥È°ÍÂžÉô€òŒÂÁõ€¹€ëŸå€Ç¥ß¥¹€·€¬€Á€ÊÅÀ€ò¥ê¥¹¥È¥¢¥Ã¥×€·€¿
€â€Î€Ç€¢€ë¡¥

(1) ¥¿¥¹¥¯œªÎ»»þ

ext_tsk €òžÆ€Ð€º€Ë¥¿¥¹¥¯€Î¥á¥€¥óŽØ¿ô€«€é¥ê¥¿¡Œ¥ó€·€¿Ÿì¹ç¡€ext_tsk €òžÆ
€ÓœÐ€·€¿€Î€ÈÆ±Åù€ÎœèÍý€ò¹Ô€Š€è€Š€Ë€·€Ê€±€ì€Ð€Ê€é€Ê€€¡¥¥¿¥¹¥¯µ¯Æ°»þ€Ë¡€
¥á¥€¥óŽØ¿ô€«€é€Î¥ê¥¿¡Œ¥ó¥¢¥É¥ì¥¹€ò ext_tsk €ÎÈÖÃÏ€ËÀßÄê€·€Æ€ª€¯ÊýË¡€ò
¿äŸ©€¹€ë¡¥

(2) ¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ç€Î³ä¹þ€ß¥Þ¥¹¥¯€ÎÊÑ¹¹

chg_iXX €ò¥µ¥Ý¡Œ¥È€¹€ëŸì¹ç¡€¥¿¥¹¥¯ÀÚÂØ€š€ÎºÝ€Ë¡€chg_iXX €Ë€è€Ã€ÆÀßÄê€·
€¿³ä¹þ€ß¥Þ¥¹¥¯€ÎÃÍ¡Ê¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€Ë€ª€±€ë³ä¹þ€ß¥Þ¥¹¥¯€ÎÃÍ¡Ë€ò¿·€·
€€¥¿¥¹¥¯€Ë°ú€­·Ñ€°€³€È€ò¿äŸ©€¹€ë¡¥ÆÃ€Ë¡€³ä¹þ€ß€ÎœÐžý€Ç¥¿¥¹¥¯ÀÚÂØ€š€ò¹Ô
€Š²Õœê€ÏÃí°Õ€¬É¬Í×€Ç€¢€ë¡¥¶ñÂÎÅª€Ë€Ï¡€°ÊÁ°€ËÆ±€ž¥¿¥¹¥¯€¬Æ°€€€Æ€€€¿»þ€Î
³ä¹þ€ß¥Þ¥¹¥¯€¬¥¹¥¿¥Ã¥¯€ËÀÑ€Þ€ì€Æ€€€ëŸì¹ç€Ë¡€€³€ì€ò€œ€Î€Þ€Þœñ€­Ìá€·€Æ€Ï
€Ê€é€Ê€€¡¥

(3) ¥¿¥¹¥¯Îã³°œèÍý€ÎŒÂ¹Ô¥³¥ó¥Æ¥­¥¹¥È

¥¿¥¹¥¯Îã³°œèÍý¥ë¡Œ¥Á¥ó€Ï¥¿¥¹¥¯¥³¥ó¥Æ¥­¥¹¥È€ÇŒÂ¹Ô€µ€ì€ë€¿€á¡€¥¿¥¹¥¯Îã³°
œèÍý¥ë¡Œ¥Á¥óŒÂ¹Ô»þ€Ë€Ï¥¹¥¿¥Ã¥¯¥Ý¥€¥ó¥¿€¬¥¿¥¹¥¯¥¹¥¿¥Ã¥¯€ò»Ø€·€Æ€€€ëÉ¬Í×
€¬€¢€ë¡ÊÆÃ€Ë³ä¹þ€ß€ÎœÐžýœèÍý€ÇÃí°Õ€¹€ë€³€È¡Ë ¡¥

(4) CPUÎã³°¥Ï¥ó¥É¥é

CPUÎã³°¥Ï¥ó¥É¥éŒÂ¹Ô»þ€Ï¡€³ä¹þ€ß¥Þ¥¹¥¯€ÎÃÍ€¬CPUÎã³°È¯ÀžÄŸÁ°€ÈÆ±€ž€Ë€Ê€ë
€è€Š€Ë€¹€ë€³€È¡¥

(5) ŒÂ¹Ô€¹€Ù€­¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç€ÎœèÍý

ŒÂ¹Ô€¹€Ù€­¥¿¥¹¥¯€¬€Ê€€¡Êschedtsk €¬ NULL¡ËŸì¹ç€Ë¡€¥×¥í¥»¥Ã¥µ€òÂÔ€Á¥â¡Œ
¥É¡Ê¥¹¥ê¡Œ¥×¥â¡Œ¥É¡Ë€Ë°Ü¹Ô€µ€»€ëœèÍý€È¡€³ä¹þ€ß€òµö²Ä€¹€ëœèÍý€È€Ï¡€ÉÔ²Ä
Ê¬€Ë¹Ô€Ê€ŠÉ¬Í×€¬€¢€ë¡¥€³€ì€òÉÔ²ÄÊ¬€Ë¹Ô€Ê€ï€Ê€€Ÿì¹ç¡€³ä¹þ€ß€òµö²Ä€·€¿ÄŸ
žå€Ë³ä¹þ€ß€¬Æþ€ê¡€€œ€ÎÃæ€Ç¥¿¥¹¥¯€¬ŒÂ¹Ô²ÄÇœŸõÂÖ€Ë€Ê€ë€È¡€ŒÂ¹Ô€¹€Ù€­¥¿¥¹
¥¯€¬€¢€ë€Ë€â€«€«€ï€é€º¥×¥í¥»¥Ã¥µ€¬ÂÔ€Á¥â¡Œ¥É€Ë€Ê€Ã€Æ€·€Þ€Š¡¥

€Þ€¿¡€ŒÂ¹Ô€¹€Ù€­¥¿¥¹¥¯€¬€Ê€¯¡€³ä¹þ€ß€òµö²Ä€·€Æ³ä¹þ€ß€òÂÔ€ÄŽÖ€Ï¡€runtsk 
€ò NULL €ËÀßÄê€·€Ê€±€ì€Ð€Ê€é€Ê€€¡¥€³€Î€è€Š€ËÀßÄê€·€Ê€€€È¡€³ä¹þ€ß¥Ï¥ó¥É
¥é€«€é iget_tid €òžÆ€ÓœÐ€·€¿ºÝ€ÎÆ°ºî€¬»ÅÍÍ€Ë¹çÃ×€·€Ê€¯€Ê€ë¡ÊŠÌITRON4.0 
»ÅÍÍ€Ç€Ï¡€ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯€¬€Ê€€Ÿì¹ç€Ë¡€iget_tid €Ï TSK_NONE €òÊÖ€¹€³
€È€Ë€Ê€Ã€Æ€ª€ê¡€iget_tid €Î¥³¡Œ¥É€Ï¡€runtsk €¬ NULL €Î»þ€Ë TSK_NONE €ò
ÊÖ€¹€è€Š€Ë€Ê€Ã€Æ€€€ë¡Ë¡¥

m68k €ÎŒÂÁõ€Ï¡Êconfig/m68k/cpu_support.S €è€ê¡Ë¡€

dispatcher:
        move.l schedtsk, %a0
        move.l %a0, runtsk              /* schedtsk €ò runtsk €Ë */
        jbeq dispatcher_1               /* runtsk €¬€¢€ë€«¡© */

€È€Ê€Ã€Æ€ª€ê¡€schedtsk €¬ NULL €Î»þ€Ë¡€runtsk €ò NULL €Ë€·€Æ€«€é¡€³ä¹þ
€ßÂÔ€Á€ËÆþ€ë¡¥€·€«€·€Ê€¬€é¡€€³€ÎœèÍý€¬ÈŽ€±€Æ€€€ë€È¡€schedtsk €¬ NULL 
€Î»þ€Ë€Ï¡€runtsk €ò€¹€°€Ë¹¹¿·€·€Ê€€¡¥€œ€Î€¿€á¡€ŒÂ¹ÔŸõÂÖ€Î¥¿¥¹¥¯€¬€Ê€€
Ÿì¹ç€Ë iget_tid €òžÆ€Ö€È¡€Á°€ËŒÂ¹Ô€µ€ì€Æ€€€¿¥¿¥¹¥¯€ÎID €¬ÊÖ€ë¡¥
 
°ÊŸå
