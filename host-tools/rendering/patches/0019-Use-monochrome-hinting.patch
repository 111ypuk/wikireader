From 0ef783b5eefea73d7ab9bead26a1f6a5b20a3e65 Mon Sep 17 00:00:00 2001
From: Holger Hans Peter Freyther <zecke@selfish.org>
Date: Fri, 6 Mar 2009 15:58:57 +0800
Subject: [PATCH] Use monochrome hinting...

---
 WebCore/platform/graphics/gtk/FontGtk.cpp |    4 ++--
 WebKitTools/GtkLauncher/main.c            |   19 +++++++++++++------
 2 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/WebCore/platform/graphics/gtk/FontGtk.cpp b/WebCore/platform/graphics/gtk/FontGtk.cpp
index fe210e5..5e3c069 100644
--- a/WebCore/platform/graphics/gtk/FontGtk.cpp
+++ b/WebCore/platform/graphics/gtk/FontGtk.cpp
@@ -273,8 +273,8 @@ webkit_ft2_font_render_glyph (PangoFont *font,
       rendered = g_slice_new (WebKitFT2RenderedGlyph);
 
       /* Draw glyph */
-      FT_Load_Glyph (face, glyph_index, FT_LOAD_DEFAULT);
-      FT_Render_Glyph (face->glyph, FT_RENDER_MODE_NORMAL);
+      FT_Load_Glyph (face, glyph_index, FT_LOAD_MONOCHROME);
+      FT_Render_Glyph (face->glyph, FT_RENDER_MODE_MONO);
 
       rendered->bitmap = face->glyph->bitmap;
       rendered->bitmap.buffer = (unsigned char*)g_memdup (face->glyph->bitmap.buffer,
diff --git a/WebKitTools/GtkLauncher/main.c b/WebKitTools/GtkLauncher/main.c
index 1fa08fa..92a90f4 100644
--- a/WebKitTools/GtkLauncher/main.c
+++ b/WebKitTools/GtkLauncher/main.c
@@ -64,22 +64,29 @@ static gint dumped_glyphs = 0;
 #define WRITE_BITMAP(path, glyph, var, width, height) \
     do {                                                          \
     GString* path_##var = g_string_new(path);                     \
-    g_string_append_printf(path_##var, "/%s.pnm", #var);          \
+    g_string_append_printf(path_##var, "/%s.pbm", #var);          \
     GByteArray* content_##var = g_byte_array_new();               \
     GString* header = g_string_new(NULL);                         \
-    g_string_append_printf(header, "P5\n%d %d\n255\n",            \
+    g_string_append_printf(header, "P1\n#Created by monkeys\n%d %d\n",            \
                            glyph->width, glyph->height);          \
     gchar* data = g_string_free(header, FALSE);                   \
     g_byte_array_append(content_##var, data, strlen(data));       \
-    int row = 0, width;                                           \
+    int row = 0, width, column = 0;                               \
     for (row = 0; row < glyph->height; ++row) {                   \
         unsigned char* row_start = glyph->bitmap + (row*glyph->glyph_pitch); \
         for (width =  0; width < glyph->width; ++width) {         \
-            g_byte_array_append(content_##var,                    \
-                                row_start + width,                \
-                                1);                               \
+            unsigned int byte = width / 8;                        \
+            unsigned int bit = width % 8;                         \
+            unsigned char data = row_start[byte];                 \
+            data = (data & (0x80 >> bit)) ? 255 : 0;              \
+            if (data == 255)                                      \
+                g_byte_array_append(content_##var, "0", 1);       \
+            else                                                  \
+                g_byte_array_append(content_##var, "1", 1);       \
+            if (++column % 70 == 0) g_byte_array_append(content_##var, "\n", 1); \
         }                                                         \
     }                                                             \
+    g_byte_array_append(content_##var, "\n", 1);                  \
     gchar* c_path_##var = g_string_free(path_##var, FALSE);       \
     int length = content_##var->len;                              \
     gchar* c_content_##var = g_byte_array_free(content_##var, FALSE); \
-- 
1.5.6.3

