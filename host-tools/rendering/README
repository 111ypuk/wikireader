Hacks to webkit to get the things we want.... to happen


== What ==

* This is patching WebKit/Gtk+ to extract the used 'glyphs' and
  their x/y position from a webpage. This then can be encoded
  in various ways (for font collection generation or such)


== Why ==

* MediaWiki is simply a way to describe HTML (actually HTML is
  embedded into the content) and WebKit was the most easy way to
  get a moderm HTML renderer.

* I'm the original author of the font rendering for WebKit/Gtk+
  which allowed me to easily change the pango implementation to
  keep a copy of the glyphs and their position on the screen.


== How == 

The patches will patch the Gtk+ port of WebKit and the GtkLauncher
executable to create a directory with glyph information and write
one file with the positions of each glyph.
The glyph data is pnm....

= Building =
Get a recent webkit (e.g. r40817) and apply the patches from the
current directory. Use ./WebKitTools/Script/build-webkit to build
it.


= Run ./Programs/GtkLauncher on any url  =
After load directories with the pattern fonts/Font_Name_Size/GlyphIndex/
will be created. They contain font information and a bitmap of the glyph.

You will also find a render_text.blib. Containing the position of
each to be displayed glyph and the to be used font.

= Conver pnm to png =
Use this snippet to convert. This is needed as cairo only has a
png loader builtin...

for i in fonts/*/*/*.pbm; do pnmtopng $i > `dirname $i`/`basename $i pbm`png; done

= Render render_text.blib with the fonts =
Use the small cairo script render_text.py to convert the render_text.blib
into a rendered image.


= Change font operation to save size... =
